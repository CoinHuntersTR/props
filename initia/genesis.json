{
  "genesis_time": "2024-05-10T07:00:00Z",
  "chain_id": "initiation-1",
  "initial_height": "1",
  "consensus_params": {
    "block": {
      "max_bytes": "22020096",
      "max_gas": "20000000000"
    },
    "evidence": {
      "max_age_num_blocks": "100000",
      "max_age_duration": "172800000000000",
      "max_bytes": "1048576"
    },
    "validator": {
      "pub_key_types": [
        "ed25519"
      ]
    },
    "version": {
      "app": "0"
    },
    "abci": {
      "vote_extensions_enable_height": "1"
    }
  },
  "app_hash": "",
  "app_state": {
    "06-solomachine": null,
    "07-tendermint": null,
    "auction": {
      "params": {
        "max_bundle_size": 2,
        "escrow_account_address": "lUgrolt78Xjd4S2z/yDwDpD60Ak=",
        "reserve_fee": {
          "denom": "uinit",
          "amount": "1"
        },
        "min_bid_increment": {
          "denom": "uinit",
          "amount": "1"
        },
        "front_running_protection": true,
        "proposer_fee": "0.000000000000000000"
      }
    },
    "auth": {
      "params": {
        "max_memo_characters": "256",
        "tx_sig_limit": "7",
        "tx_size_cost_per_byte": "10",
        "sig_verify_cost_ed25519": "590",
        "sig_verify_cost_secp256k1": "1000"
      },
      "accounts": [
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init10jqqj8cswcraswmd5pqka7qj5d4k2ghc6rc6xe",
          "pub_key": null,
          "account_number": "0",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.ModuleAccount",
          "base_account": {
            "address": "init1w6t0l7z0yerj49ehnqwqaayxqpe3u7e2l0dmsl",
            "pub_key": null,
            "account_number": "1",
            "sequence": "0"
          },
          "name": "reward",
          "permissions": []
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1hk0asaef9nxvnj7gjwawv0zz0yd7adcysktpqu",
          "pub_key": null,
          "account_number": "2",
          "sequence": "0"
        }
      ]
    },
    "authz": {
      "authorization": []
    },
    "bank": {
      "params": {
        "send_enabled": [],
        "default_send_enabled": true
      },
      "balances": [
        {
          "address": "init1w6t0l7z0yerj49ehnqwqaayxqpe3u7e2l0dmsl",
          "coins": [
            {
              "denom": "uinit",
              "amount": "400000000000000"
            }
          ]
        },
        {
          "address": "init10jqqj8cswcraswmd5pqka7qj5d4k2ghc6rc6xe",
          "coins": [
            {
              "denom": "uinit",
              "amount": "100000000"
            }
          ]
        },
        {
          "address": "init1hk0asaef9nxvnj7gjwawv0zz0yd7adcysktpqu",
          "coins": [
            {
              "denom": "ueth",
              "amount": "1000000000000000"
            },
            {
              "denom": "uinit",
              "amount": "599999900000000"
            },
            {
              "denom": "utia",
              "amount": "1000000000000000"
            },
            {
              "denom": "uusdc",
              "amount": "1000000000000000"
            }
          ]
        }
      ],
      "supply": [],
      "denom_metadata": [],
      "send_enabled": []
    },
    "capability": {
      "index": "1",
      "owners": []
    },
    "consensus": null,
    "crisis": {
      "constant_fee": {
        "denom": "uinit",
        "amount": "1000"
      }
    },
    "distribution": {
      "params": {
        "community_tax": "0.020000000000000000",
        "withdraw_addr_enabled": true,
        "reward_weights": [
          {
            "denom": "uinit",
            "weight": "1.000000000000000000"
          }
        ]
      },
      "fee_pool": {
        "community_pool": []
      },
      "delegator_withdraw_infos": [],
      "previous_proposer": "",
      "outstanding_rewards": [],
      "validator_accumulated_commissions": [],
      "validator_historical_rewards": [],
      "validator_current_rewards": [],
      "delegator_starting_infos": [],
      "validator_slash_events": []
    },
    "evidence": {
      "evidence": []
    },
    "feegrant": {
      "allowances": []
    },
    "feeibc": {
      "identified_fees": [],
      "fee_enabled_channels": [],
      "registered_payees": [],
      "registered_counterparty_payees": [],
      "forward_relayers": []
    },
    "forwarding": {
      "num_of_accounts": {},
      "num_of_forwards": {},
      "total_forwarded": {}
    },
    "genutil": {
      "gen_txs": [
        {
          "body": {
            "messages": [
              {
                "@type": "/initia.mstaking.v1.MsgCreateValidator",
                "description": {
                  "moniker": "node",
                  "identity": "",
                  "website": "",
                  "security_contact": "",
                  "details": ""
                },
                "commission": {
                  "rate": "0.050000000000000000",
                  "max_rate": "0.100000000000000000",
                  "max_change_rate": "0.010000000000000000"
                },
                "validator_address": "initvaloper10jqqj8cswcraswmd5pqka7qj5d4k2ghcwxprgf",
                "pubkey": {
                  "@type": "/cosmos.crypto.ed25519.PubKey",
                  "key": "zpM+H+mhdlF5anmPWE7ft2n2k5AZwazqg6t/wSDCZ2Y="
                },
                "amount": [
                  {
                    "denom": "uinit",
                    "amount": "10000000"
                  }
                ]
              }
            ],
            "memo": "093e1b89a498b6a8760ad2188fbda30a05e4f300@10.148.0.9:26656",
            "timeout_height": "0",
            "extension_options": [],
            "non_critical_extension_options": []
          },
          "auth_info": {
            "signer_infos": [
              {
                "public_key": {
                  "@type": "/cosmos.crypto.secp256k1.PubKey",
                  "key": "A5MgYbUu2K3vLsdTGZOvM3tVA4apc55i4TPRfB8h2go4"
                },
                "mode_info": {
                  "single": {
                    "mode": "SIGN_MODE_DIRECT"
                  }
                },
                "sequence": "0"
              }
            ],
            "fee": {
              "amount": [],
              "gas_limit": "200000",
              "payer": "",
              "granter": ""
            },
            "tip": null
          },
          "signatures": [
            "Y/dMv8NyQgUPBPNGk93kWaxQ3nBX0wU8swkALkERWIlCD2kq7LFm+MOf04NdnjiIX9BnphBQ699wdKVB2E+Xqg=="
          ]
        }
      ]
    },
    "gov": {
      "starting_proposal_id": "1",
      "deposits": [],
      "votes": [],
      "proposals": [],
      "params": {
        "min_deposit": [
          {
            "denom": "uinit",
            "amount": "10000000"
          }
        ],
        "max_deposit_period": "172800s",
        "voting_period": "172800s",
        "quorum": "0.334000000000000000",
        "threshold": "0.500000000000000000",
        "veto_threshold": "0.334000000000000000",
        "min_initial_deposit_ratio": "0.000000000000000000",
        "proposal_cancel_ratio": "0.500000000000000000",
        "proposal_cancel_dest": "",
        "expedited_voting_period": "86400s",
        "expedited_threshold": "0.667000000000000000",
        "expedited_min_deposit": [
          {
            "denom": "uinit",
            "amount": "50000000"
          }
        ],
        "burn_vote_quorum": false,
        "burn_proposal_deposit_prevote": false,
        "burn_vote_veto": true,
        "min_deposit_ratio": "0.010000000000000000",
        "emergency_min_deposit": [
          {
            "denom": "uinit",
            "amount": "100000000"
          }
        ],
        "emergency_tally_interval": "300s",
        "low_threshold_functions": [
          "0x1::vip::register_snapshot"
        ]
      },
      "constitution": ""
    },
    "group": {
      "group_seq": "0",
      "groups": [],
      "group_members": [],
      "group_policy_seq": "0",
      "group_policies": [],
      "proposal_seq": "0",
      "proposals": [],
      "votes": []
    },
    "ibc": {
      "client_genesis": {
        "clients": [],
        "clients_consensus": [],
        "clients_metadata": [],
        "params": {
          "allowed_clients": [
            "*"
          ]
        },
        "create_localhost": false,
        "next_client_sequence": "0"
      },
      "connection_genesis": {
        "connections": [],
        "client_connection_paths": [],
        "next_connection_sequence": "0",
        "params": {
          "max_expected_time_per_block": "30000000000"
        }
      },
      "channel_genesis": {
        "channels": [],
        "acknowledgements": [],
        "commitments": [],
        "receipts": [],
        "send_sequences": [],
        "recv_sequences": [],
        "ack_sequences": [],
        "next_channel_sequence": "0",
        "params": {
          "upgrade_timeout": {
            "height": {
              "revision_number": "0",
              "revision_height": "0"
            },
            "timestamp": "600000000000"
          }
        }
      }
    },
    "ibchooks": {
      "params": {
        "default_allowed": false
      },
      "acls": []
    },
    "interchainaccounts": {
      "controller_genesis_state": {
        "active_channels": [],
        "interchain_accounts": [],
        "ports": [],
        "params": {
          "controller_enabled": true
        }
      },
      "host_genesis_state": {
        "active_channels": [],
        "interchain_accounts": [],
        "port": "icahost",
        "params": {
          "host_enabled": true,
          "allow_messages": [
            "/cosmos.authz.v1beta1.MsgExec",
            "/cosmos.authz.v1beta1.MsgGrant",
            "/cosmos.authz.v1beta1.MsgRevoke",
            "/cosmos.bank.v1beta1.MsgSend",
            "/cosmos.bank.v1beta1.MsgMultiSend",
            "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
            "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
            "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
            "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
            "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
            "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
            "/cosmos.gov.v1.MsgVoteWeighted",
            "/cosmos.gov.v1.MsgSubmitProposal",
            "/cosmos.gov.v1.MsgDeposit",
            "/cosmos.gov.v1.MsgVote",
            "/cosmos.group.v1.MsgCreateGroup",
            "/cosmos.group.v1.MsgCreateGroupPolicy",
            "/cosmos.group.v1.MsgExec",
            "/cosmos.group.v1.MsgLeaveGroup",
            "/cosmos.group.v1.MsgSubmitProposal",
            "/cosmos.group.v1.MsgUpdateGroupAdmin",
            "/cosmos.group.v1.MsgUpdateGroupMember",
            "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
            "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
            "/cosmos.group.v1.MsgVote",
            "/cosmos.group.v1.MsgWithdrawProposal",
            "/initia.mstaking.v1.MsgEditValidator",
            "/initia.mstaking.v1.MsgDelegate",
            "/initia.mstaking.v1.MsgUndelegate",
            "/initia.mstaking.v1.MsgBeginRedelegate",
            "/initia.mstaking.v1.MsgCreateValidator",
            "/ibc.applications.transfer.v1.MsgTransfer",
            "/ibc.applications.nft_transfer.v1.MsgTransfer",
            "/initia.move.v1.MsgPublish",
            "/initia.move.v1.MsgExecute",
            "/initia.move.v1.MsgScript"
          ]
        }
      }
    },
    "intertx": null,
    "marketmap": {
      "market_map": {
        "markets": {
          "AAVE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AAVE",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AAVEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "aaveusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "AAVEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AAVE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AAVE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "AAVEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AAVE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ADA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ADA",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ADA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ADA_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "adausdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ADAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ADA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ADA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AEVO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AEVO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AEVO_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AEVO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AGIX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AGIX",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AGIX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AGIX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AGIX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ALGO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ALGO",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ALGO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ALGOUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ALGO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ALGO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "APE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "APE",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "APEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "APE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "APE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "APEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "APE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "APEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "APE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "APT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "APT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "APT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "APT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "aptusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "APT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "APT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ARB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ARB",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ARB-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ARB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "arbusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ARB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ARB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ARKM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ARKM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ARKM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ARKM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ASTR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ASTR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ASTRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ASTR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ASTRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ASTR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ASTRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ASTR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ATOM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ATOM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ATOM-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ATOM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ATOMUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ATOM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ATOM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AVAX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AVAX",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AVAXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AVAXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AVAX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AVAX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "avaxusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "AVAXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AVAX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AVAX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AXL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AXL",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AXLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AXLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AXL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WAXL_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "WAXLUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BCH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BCH",
                "Quote": "USD"
              },
              "decimals": "7",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BCH-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BCH_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "bchusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "BCHUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BCH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BCH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BLUR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BLUR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BLUR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BLUR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "BLURUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BLUR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BLURUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BLUR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BNB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BNB",
                "Quote": "USD"
              },
              "decimals": "7",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "okx_ws",
                "off_chain_ticker": "BNB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BNB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BNB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BONK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BONK",
                "Quote": "USD"
              },
              "decimals": "14",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BONK-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BONK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BONK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BTC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BTC",
                "Quote": "USD"
              },
              "decimals": "5",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BTC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "btcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXBTZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "COMP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "COMP",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "COMPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "COMP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "COMP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "COMPUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "COMPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "COMP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "CRV/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "CRV",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "CRVUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "CRV-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "CRV_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "CRVUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "CRV-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "CRVUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "CRV-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DOGE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DOGE",
                "Quote": "USD"
              },
              "decimals": "11",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "DOGE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DOGE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "dogeusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XDGUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DOGE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DOGE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DOT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DOT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "DOT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DOT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "DOTUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DOT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DOT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DYDX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DYDX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DYDX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DYDX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DYDX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DYM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DYM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DYM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DYM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "EOS/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "EOS",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "EOS-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "EOS_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "EOSUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "EOS-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "EOS-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ETC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ETC",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ETCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ETC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ETC_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "etcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ETC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ETCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ETC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ETH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ETH",
                "Quote": "USD"
              },
              "decimals": "6",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ETH-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ethusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XETHZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ETH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ETH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "FET/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "FET",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "FETUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "FET-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "FETUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "FET-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "FET-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "FETUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "FIL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "FIL",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "FILUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "FIL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "FIL_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "filusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "FILUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "FILUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "FIL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "GRT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "GRT",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "GRT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "GRT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "GRTUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "GRT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "GRT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "HBAR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "HBAR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bitstamp_ws",
                "off_chain_ticker": "hbarusd",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "HBAR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "HBAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "HBAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ICP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ICP",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ICP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ICPUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ICP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ICP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "IMX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "IMX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "IMXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "IMX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "IMXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "IMX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "IMXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "IMX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "INJ/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "INJ",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "INJ-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "INJUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "INJ-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "INJ-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "JTO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "JTO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "coinbase_api",
                "off_chain_ticker": "JTO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "JTO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "JTO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "JUP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "JUP",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "JUP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "JUP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "JUP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LDO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LDO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LDOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LDO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "LDOUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LDO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LDOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LDO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LINK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LINK",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LINK-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "LINKUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LINK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LINK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LTC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LTC",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LTC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ltcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XLTCZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MANA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MANA",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MANAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MANA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "MANA_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MANAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MANA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MANAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MANA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MATIC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MATIC",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MATIC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "MATIC_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "maticusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MATICUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MATIC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MATIC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MKR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MKR",
                "Quote": "USD"
              },
              "decimals": "6",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MKRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MKR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MKRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MKR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MKRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MKR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "NEAR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "NEAR",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "NEARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "NEAR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "NEAR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "nearusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "NEAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "NEARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "NEAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "NTRN/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "NTRN",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "2",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "NTRNUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "NTRN_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "NTRN-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "NTRN-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "OP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "OP",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "OPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "OP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "OP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "OP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "OPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "OP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ORDI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ORDI",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ORDI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ordiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ORDI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ORDI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "PEPE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "PEPE",
                "Quote": "USD"
              },
              "decimals": "16",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "PEPE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "PEPEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "PEPE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "PEPE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "PYTH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "PYTH",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "PYTH_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "PYTH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "PYTH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "RNDR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "RNDR",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "RNDRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "RNDR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "RNDRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "RNDR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "RNDR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "RNDRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "RUNE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "RUNE",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "RUNEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "RUNE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "RUNEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "RUNE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "RUNEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SEI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SEI",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SEI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SEI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "seiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SEI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SHIB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SHIB",
                "Quote": "USD"
              },
              "decimals": "15",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SHIB-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SHIB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SHIBUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SHIB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SHIB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SNX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SNX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SNX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SNXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SNX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SOL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SOL",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SOL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "solusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SOLUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SOL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SOL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "STRK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "STRK",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "STRKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "STRKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "STRKUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "STRK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "STRK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "STRK_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "STX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "STX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "STX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "STX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "STXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "STX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "STX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SUI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SUI",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SUI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SUI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "suiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SUI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SUI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "TIA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "TIA",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "TIA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "tiausdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "TIAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "TIA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "TIA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "TRX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "TRX",
                "Quote": "USD"
              },
              "decimals": "11",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "TRX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "trxusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "TRXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "TRX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "TRX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "UNI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "UNI",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "UNIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "UNIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "UNI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "UNI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "UNIUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "UNI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "UNI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "USDT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "USDT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "1",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "USDCUSDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "USDCUSDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "USDT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ethusdt",
                "normalize_by_pair": {
                  "Base": "ETH",
                  "Quote": "USD"
                },
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "USDTZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "BTC",
                  "Quote": "USD"
                },
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "USDC-USDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              }
            ]
          },
          "WLD/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "WLD",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WLD_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "wldusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "WLD-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "WLD-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "WOO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "WOO",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "WOOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WOO_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "WOO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "WOO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "WOOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "XLM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "XLM",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "XLM-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXLMZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "XLM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "XLM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "XRP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "XRP",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "XRP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "XRP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "xrpusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXRPZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "XRP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "XRP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          }
        }
      },
      "last_updated": "0",
      "params": {
        "market_authorities": [
          "init12xufazw43lanl8dkvf3l7y9zzm8n3zsw0xafeg"
        ],
        "admin": "init12xufazw43lanl8dkvf3l7y9zzm8n3zsw0xafeg"
      }
    },
    "move": {
      "params": {
        "base_denom": "uinit",
        "base_min_gas_price": "0.150000000000000000",
        "contract_shared_revenue_ratio": "0.500000000000000000",
        "allowed_publishers": []
      },
      "execution_counter": "0",
      "stdlibs": [
        "oRzrCwYAAAAJAQAEAwRVBVkkB33HAgjEAyAG5AMgEIQEjAIMkAaeAw+uCQYAAwAEAAUAAQAABgACAAAHAwAAAAgAAQAACQAEAAAKAAEAAAsABQAADAAGAAANAAEAAA4AAQAADwAFAAAQAAUAABEABQAAEgAFAAATBwEAARQBAQABFQEBAAEFAQMAAQoCAQwBAQQBAwMCAwUDAgYBAQMDAgMFAQEDAgMBAgZvYmplY3QHc3Rha2luZwV0YWJsZQdhY2NvdW50BWVycm9yDmNyZWF0ZV9hY2NvdW50FWNyZWF0ZV9hY2NvdW50X3NjcmlwdA5jcmVhdGVfYWRkcmVzcxVjcmVhdGVfb2JqZWN0X2FjY291bnQNY3JlYXRlX3NpZ25lchRjcmVhdGVfdGFibGVfYWNjb3VudAlleGlzdHNfYXQQZ2V0X2FjY291bnRfaW5mbxJnZXRfYWNjb3VudF9udW1iZXITZ2V0X3NlcXVlbmNlX251bWJlcg9pc19iYXNlX2FjY291bnQRaXNfbW9kdWxlX2FjY291bnQRaXNfb2JqZWN0X2FjY291bnQQaXNfdGFibGVfYWNjb3VudBZyZXF1ZXN0X2NyZWF0ZV9hY2NvdW50DmFscmVhZHlfZXhpc3RzCW5vdF9mb3VuZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgEAAgEDAgEBAgECAwhkAAAAAAAAAAMIZQAAAAAAAAATaW5pdGlhOjptZXRhZGF0YV92MPYBAmQAAAAAAAAAF0VBQ0NPVU5UX0FMUkVBRFlfRVhJU1RTK1RoaXMgZXJyb3IgdHlwZSBpcyB1c2VkIGluIG5hdGl2ZSBmdW5jdGlvbi5lAAAAAAAAABJFQUNDT1VOVF9OT1RfRk9VTkQAAAcJZXhpc3RzX2F0AQEAD2lzX2Jhc2VfYWNjb3VudAEBABBpc190YWJsZV9hY2NvdW50AQEAEWlzX21vZHVsZV9hY2NvdW50AQEAEWlzX29iamVjdF9hY2NvdW50AQEAEmdldF9hY2NvdW50X251bWJlcgEBABNnZXRfc2VxdWVuY2VfbnVtYmVyAQEAAAEAAAIQCgARBwEBASAECAULBwQRDycLAAYAAAAAAAAAAAcAEQ4CAQEEAAIECwARAAECAgMCAAMDAAAIKwoAEQcMBQwGDAQg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bGl0eRBDb2luQ3JlYXRlZEV2ZW50EEZyZWV6ZUNhcGFiaWxpdHkMTWFuYWdpbmdSZWZzDk1pbnRDYXBhYmlsaXR5Bk9iamVjdAhNZXRhZGF0YQdiYWxhbmNlBk9wdGlvbghiYWxhbmNlcw1GdW5naWJsZUFzc2V0BGJ1cm4IZGVjaW1hbHMGU3RyaW5nEWRlbm9tX3RvX21ldGFkYXRhB2RlcG9zaXQRZnJlZXplX2NvaW5fc3RvcmUKaW5pdGlhbGl6ZQlFeHRlbmRSZWYiaW5pdGlhbGl6ZV9hbmRfZ2VuZXJhdGVfZXh0ZW5kX3JlZgdpc19jb2luEWlzX2NvaW5fYnlfc3ltYm9sE2lzX2NvaW5faW5pdGlhbGl6ZWQJaXNfZnJvemVuB21heGltdW0IbWV0YWRhdGEQbWV0YWRhdGFfYWRkcmVzcxFtZXRhZGF0YV90b19kZW5vbQRtaW50B21pbnRfdG8EbmFtZQZzdXBwbHkGc3ltYm9sCHRyYW5zZmVyE3VuZnJlZXplX2NvaW5fc3RvcmUId2l0aGRyYXcNbWV0YWRhdGFfYWRkcghtaW50X3JlZgdNaW50UmVmCGJ1cm5fcmVmB0J1cm5SZWYMdHJhbnNmZXJfcmVmC1RyYW5zZmVyUmVmDm9iamVjdF9hZGRyZXNzBmxlbmd0aApzdWJfc3RyaW5nBWJ5dGVzDWRlY29kZV9zdHJpbmcKdG9fYWRkcmVzcxFhZGRyZXNzX3RvX29iamVjdA9zZXRfZnJvemVuX2ZsYWcOQ29uc3RydWN0b3JSZWYTY3JlYXRlX25hbWVkX29iamVjdCtjcmVhdGVfcHJpbWFyeV9zdG9yZV9lbmFibGVkX2Z1bmdpYmxlX2Fzc2V0EWdlbmVyYXRlX21pbnRfcmVmEWdlbmVyYXRlX2J1cm5fcmVmFWdlbmVyYXRlX3RyYW5zZmVyX3JlZg9nZW5lcmF0ZV9zaWduZXIcYWRkcmVzc19mcm9tX2NvbnN0cnVjdG9yX3JlZgRlbWl0G29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZhNnZW5lcmF0ZV9leHRlbmRfcmVmFWNyZWF0ZV9vYmplY3RfYWRkcmVzcwR1dGY4CHRvX2J5dGVzEGVuY29kZV90b19zdHJpbmcGYXBwZW5kAAAAAAAAAAAAAAAAAAAA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bgVlcnJvcgVldmVudAZvYmplY3QGb3B0aW9uB3JveWFsdHkGc2lnbmVyBnN0cmluZwV0YWJsZQlCdXJuRXZlbnQKQ29sbGVjdGlvbhVDcmVhdGVDb2xsZWN0aW9uRXZlbnQLRml4ZWRTdXBwbHkJTWludEV2ZW50DU11dGF0aW9uRXZlbnQKTXV0YXRvclJlZgtOZnRSZXNwb25zZQ9VbmxpbWl0ZWRTdXBwbHkGT3B0aW9uBk9iamVjdAVjb3VudAZTdHJpbmcZY3JlYXRlX2NvbGxlY3Rpb25fYWRkcmVzcxZjcmVhdGVfY29sbGVjdGlvbl9zZWVkDkNvbnN0cnVjdG9yUmVmB1JveWFsdHkXY3JlYXRlX2ZpeGVkX2NvbGxlY3Rpb24bY3JlYXRlX3VubGltaXRlZF9jb2xsZWN0aW9uG2NyZWF0ZV91bnRyYWNrZWRfY29sbGVjdGlvbgdjcmVhdG9yFmRlY29tcG9zZV9uZnRfcmVzcG9uc2UQZGVjcmVtZW50X3N1cHBseQtkZXNjcmlwdGlvbhRnZW5lcmF0ZV9tdXRhdG9yX3JlZhBpbmNyZW1lbnRfc3VwcGx5BG5hbWUEbmZ0cw9zZXRfZGVzY3JpcHRpb24Hc2V0X3VyaQN1cmkIdG9rZW5faWQFVGFibGUOY3VycmVudF9zdXBwbHkKbWF4X3N1cHBseQx0b3RhbF9taW50ZWQSbXV0YXRlZF9maWVsZF9uYW1lCW9sZF92YWx1ZQluZXdfdmFsdWUEc2VsZg5vYmplY3RfYWRkcmVzcwlub3RfZm91bmQEc29tZQRub25lFWNyZWF0ZV9vYmplY3RfYWRkcmVzcwZsZW5ndGgMb3V0X29mX3JhbmdlBWJ5dGVzC1RyYW5zZmVyUmVmEGludmFsaWRfYXJndW1lbnQTY3JlYXRlX25hbWVkX29iamVjdA9nZW5lcmF0ZV9zaWduZXIKYWRkcmVzc19vZgNuZXcHaXNfc29tZQxkZXN0cm95X3NvbWUEZW1pdAxkZXN0cm95X25vbmUHZXh0cmFjdARpbml0FWdlbmVyYXRlX3RyYW5zZmVyX3JlZhhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIGcmVtb3ZlG29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZgNhZGQJVGFibGVJdGVyBGl0ZXIHcHJlcGFyZQRuZXh0BHV0ZjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAQAAAAAAAAADCAMAAAAAAAAAAwgCAAAAAAAAAAMIBQAAAAAAAAADCAYAAAAAAAAAAwgEAAAAAAAAAAMIgAAAAAAAAAADCAAIAAAAAAAAAwgeAAAAAAAAAAMIAAIAAAAAAAAKAgwLZGVzY3JpcHRpb24KAgQDdXJpE2luaXRpYTo6bWV0YWRhdGFfdjDZBAYBAAAAAAAAABpFQ09MTEVDVElPTl9ET0VTX05PVF9FWElTVB1UaGUgY29sbGVjdGlvbiBkb2VzIG5vdCBleGlzdAIAAAAAAAAAG0VDT0xMRUNUSU9OX1NVUFBMWV9FWENFRURFRFxUaGUgY29sbGVjdGlvbiBoYXMgcmVhY2hlZCBpdHMgc3VwcGx5IGFuZCBubyBtb3JlIG5mdHMgY2FuIGJlIG1pbnRlZCwgdW5sZXNzIHNvbWUgYXJlIGJ1cm5lZAMAAAAAAAAAGUVDT0xMRUNUSU9OX05BTUVfVE9PX0xPTkcuVGhlIGNvbGxlY3Rpb24gbmFtZSBpcyBvdmVyIHRoZSBtYXhpbXVtIGxlbmd0aAQAAAAAAAAADUVVUklfVE9PX0xPTkciVGhlIFVSSSBpcyBvdmVyIHRoZSBtYXhpbXVtIGxlbmd0aAUAAAAAAAAAFUVERVNDUklQVElPTl9UT09fTE9ORypUaGUgZGVzY3JpcHRpb24gaXMgb3ZlciB0aGUgbWF4aW11bSBsZW5ndGgGAAAAAAAAABpFTUFYX1NVUFBMWV9DQU5OT1RfQkVfWkVSTx9UaGUgbWF4IHN1cHBseSBtdXN0IGJlIHBvc2l0aXZlBAlCdXJuRXZlbnQBBAAJTWludEV2ZW50AQQADU11dGF0aW9uRXZlbnQBBAAVQ3JlYXRlQ29sbGVjdGlvbkV2ZW50AQQABgN1cmkBAQAEbmFtZQEBAARuZnRzAQEABWNvdW50AQEAB2NyZWF0b3IBAQALZGVzY3JpcHRpb24BAQAAAgMBBSkICwAFAQIFHgUhCAskCAsoCAslCw4CCAsFAgIDAQUeBSQICwMCAysDLAMtAwQCAwEFKQgLAAUFAgQBBS4ICy8ICzAICwYCATEFBwICKQgLAAUIAgIrAy0DAAEAAgMIEyQLADgADAMKAykBBAcFCgcAERInCgMpAwQUCwMqAxAAFDgBDAIFIgoDKQgEHgsDKggQARQ4AQwBBSA4AgwBCwEMAgsCAgEBAAAMBQsACwERAhEVAgIBAAAMDwoAERYHBiUEBgULCwABBwERFycLABEYFAIDAQAAGXkKAgYAAAAAAAAAACIEBQUKCwABBwQRGScOAxECDAgKAAsICREaDAkGAAAAAAAAAAALAgYAAAAAAAAAABIDDBELAAsJCwELAwsECwULETgDDBIMFAwQDA4MDQwKDAsODhEWBwYlBCwFMQsLAQcBERcnDhQRFgcJJQQ3BTwLCwEHBREXJw4NERYHByUEQgVHCwsBBwMRFycOChEbDAYOBgwPCwsRHAwMCgwLDQoOCxQ4BBIBDAcKDwsHLQEOEjgFBGcKDwsSOAYtAwsPERwLDAsOEgI4BwVrCw8BCxI4CA4QOAkEcg4KDRA4ChEjDgoRJAwTDhMRJQsKAgQBAAAnbA4CEQIMBwoACwcJERoMCAsACwgLAQsCCwMLBAYAAAAAAAAAAAYAAAAAAAAAABIIOAsMEAwSDA8MDQwMDAkMCg4NERYHBiUEHwUkCwoBBwERFycOEhEWBwklBCoFLwsKAQcFERcnDgwRFgcHJQQ1BToLCgEHAxEXJw4JERsMBQ4FDA4LChEcDAsKCwsMCg0LEjgEEgEMBgoOCwYtAQ4QOAwEWgoOCxA4DS0ICw4RHAsLCw0SAjgHBV4LDgELEDgODg84CQRlDgkNDzgKESMOCREkDBEOERElCwkCBQAAAClpDgIRAgwHCgALBwkRGgwICwALCAsBCwILAwsEOA8MEAwSDA8MDQwMDAkMCg4NERYHBiUEHAUhCwoBBwERFycOEhEWBwklBCcFLAsKAQcFERcnDgwRFgcHJQQyBTcLCgEHAxEXJw4JERsMBQ4FDA4LChEcDAsKCwsMCg0LEjgEEgEMBgoOCwYtAQ4QOAUEVwoOCxA4Bi0DCw4RHAsLCw0SAjgHBVsLDgELEDgIDg84CQRiDgkNDzgKESMOCREkDBEOERElCwkCBgEAAQEDDwsAOAAMAQoBKQEEBwUKBwAREicLASsBEAIUAgcBAAAMBwoAEAMUCwAQBBQCCAMAAwEDCCo7CwA4EAwECgQqAQwDCgQpAwQfCgQqAwwFCgUQABQGAQAAAAAAAAAXCwUPABULAw8FCgE4EQELBAsBCwISADgSBToKBCkIBDgKBCoIDAYKBhABFAYBAAAAAAAAABcLBg8BFQsDDwUKATgRAQsECwELAhIAOBIFOgsDAQIJAQABAQMPCwA4AAwBCgEpAQQHBQoHABESJwsBKwEQBhQCCgEAAAwFCwA4EzgQEgYCCwMAAwEDCCpZCwA4EAwECgQqAQwDCgQpAwQ1CgQqAwwFCgUQABQGAQAAAAAAAAAWCgUPABUKBRAHFAYBAAAAAAAAABYKBQ8HFQoFEAAUCwUQCBQlBCUFKgsDAQcCERcnCwMPBQoBCgI4FAsECwELAhIEOBUFWAoEKQgEVgoEKggMBgoGEAEUBgEAAAAAAAAAFgoGDwEVCgYQCRQGAQAAAAAAAAAWCwYPCRULAw8FCgEKAjgUCwQLAQsCEgQ4FQVYCwMBAgwBAAEBAw8LADgADAEKASkBBAcFCgcAERInCwErARAKFAINAQABATE4CwA4AAwFCgUpAQQHBQoHABESJwsFKwEMBAoCBwgkBBMHCAwCCwQQBTgWCwExAjgXDAdANAAAAAAAAAAADAgNBzgYBCcFIA4IQTQKAjQjDAMFKQkMAwsDBDYNBzgZDAYMCQ0ICwkLBhQSB0Q0BRwLCAIOAQABATcvDgERFgcHJQQGBQsLAAEHAxEXJwoADAMKAxALFCkBBBMFGgsDAQsAAQcAERInCwMQCxQqAQwCCwAQCxQHChEsCgIQBhQKARIFOBoLAQsCDwYVAg8BAAEBNy8OAREWBwklBAYFCwsAAQcFERcnCgAMAwoDEAsUKQEEEwUaCwMBCwABBwAREicLAxALFCoBDAILABALFAcLESwKAhAMFAoBEgU4GgsBCwIPDBUCEAEAAQEDDwsAOAAMAQoBKQEEBwUKBwAREicLASsBEAwUAgMACAABAAcABwEBBAEBAwIDAQgBAQIGAAEDAAAA",
        "oRzrCwYAAAAMAQAEAgQEAwggBCgCBSotB1doCL8BIAbfAQkQ6AEnCo8CBQyUAuEBDfUDAgAAAAEAAgIAAAMAAQEAAAQCAQAABQMEAAAGAwQAAAcDBAABCQYHAQAFBQIGCQAGCQABCAACCgIKAgEGCAABAQEJAAEGCQABCgIACAEIAAgAAwIDAgMBAgpjb21wYXJhdG9yA2JjcwZSZXN1bHQHY29tcGFyZRFjb21wYXJlX3U4X3ZlY3Rvcghpc19lcXVhbA9pc19ncmVhdGVyX3RoYW4PaXNfc21hbGxlcl90aGFuBWlubmVyCHRvX2J5dGVzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECAQACAQICAQETaW5pdGlhOjptZXRhZGF0YV92MBIBAAAAAAAAAAAFRVFVQUwAAAAAAgEIAgABAAACCgsAOAAMAgsBOAAMAwsCCwMRAQIBAQAACUoOAEEKDAcOAUEKDAkGAAAAAAAAAAAMBQoFCgcjBBIFDQoFCgkjDAIFFAkMAgsCBDMOAAoFQgoUDAYOAQoFQgoUDAgKBgoIIwQnBwISAAILBgsIJAQuBwESAAILBQYBAAAAAAAAABYMBQUICgcKCSMEOwcCEgAMBAVICwcLCSQEQwcBEgAMAwVGBwASAAwDCwMMBAsEAgIBAAAIBgsAEAAUBwAhAgMBAAAIBgsAEAAUBwEhAgQBAAAIBgsAEAAUBwIhAgAAAA==",
        "oRzrCwYAAAAIAQACAwIPBREWByclCEwgBmwJEHUnDJwB4AEAAAABAAEAAAICAQAAAwMBAAIGCgIGCgIBAgIDAwICAgUBAgMDAgAHY29tcGFyZQ1jbXBfYmNzX2J5dGVzB2NtcF91NjQGY21wX3U4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECAQACAQICAQETaW5pdGlhOjptZXRhZGF0YV92MBIBAAAAAAAAAAAFRVFVQUwAAAAAAQAABDsKAEEBDAQKAUEBDAUKBAoFEQEMBgoEBgAAAAAAAAAAJAQUBQ8KBQYAAAAAAAAAACQMAgUWCQwCCwIENQsEBgEAAAAAAAAAFwwECwUGAQAAAAAAAAAXDAUKAAoEQgEUCgEKBUIBFBECDAMKAzEAIgQ0CwEBCwABCwMCBQoLAQELAAELBgIBAAAAAxQKAAoBIQQHBwAMAwUSCwALASMEDgcCDAIFEAcBDAILAgwDCwMCAgAAAAMUCgAKASEEBwcADAMFEgsACwEjBA4HAgwCBRAHAQwCCwIMAwsDAgA=",
        "oRzrCwYAAAAMAQAMAgwIAxQoBDwGBUIbB118CNkBIAb5AQoQgwJ3CvoCCQyDAzkNvAMEAAAAAQACAAMABAAFAAYHAAQIBwAABwABAQcACQIDAAAKAQABAAUJBAUBAAEMBgcBAAINCAgAAw4HAAEAAwAEAAYAAQkAAQgAAQYIAAEGCAEAAQgBAQYJAAEKAgEDDGNvcHlhYmxlX2FueQNiY3MFZXJyb3IIZnJvbV9iY3MGc3RyaW5nCXR5cGVfaW5mbwNBbnkEcGFjawZTdHJpbmcJdHlwZV9uYW1lBnVucGFjawRkYXRhCHRvX2J5dGVzEGludmFsaWRfYXJndW1lbnQKZnJvbV9ieXRlcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgAAAAAAAAAABNpbml0aWE6Om1ldGFkYXRhX3YwYgEAAAAAAAAAAA5FVFlQRV9NSVNNQVRDSEdUaGUgdHlwZSBwcm92aWRlZCBmb3IgYHVucGFja2AgaXMgbm90IHRoZSBzYW1lIGFzIHdhcyBnaXZlbiBmb3IgYHBhY2tgLgAAAAICCQgBCwoCAAEAAAQFOAAOADgBEgACAQEAAAQDCwAQAAICAQAABA84AA4AEAAUIQQHBQoHABEFJw4AEAEUOAICAAAAAQA=",
        "oRzrCwYAAAAJAQASAhIgAzKdAQTPAQQF0wGkBAf3BcAECLcKIAbXClYMrQudCAAAAAEAAgADAAQABQAGAAcACAgJBwAECgcBAAECCwgAARYIAAciAwAFJAcBAAADLAMAAAwAAQAADQIBAAAOAwEAAA8EAQAAEAUBAAARBgEAABIHAQAAEwgBAAAUCQEAABUKAQAAFwsBAAAYDAEAABkNAQAAGg4BAAAbDwEAABwQAQAAHREBAAAeEgEAAB8TAQAGIBQVAAghFhcAByMBIAAFJQEhAQAHJiIBAAcnIwEACCgaGQAFKSQhAQAHKiUBAAcrJgEABy0nKAADLigZABYZGhkEBgwIAAsBAQgCAwAEBQoCBgsBAQgCAwMGDAsBAQgCAwMFBgsBAQgCAwYGDAUIAAgACggACgoCBwUFCgIKAgoKAgoKAgEGBgwFCAAIAAoIAAoIAAQGDAoCCggACgoCBQUKAgoKAgoKAgEEBgwKAgoIAAoIAAoGDAgACwEBCAMKCAAIAAgAAwMDCAAKBQoCBgsBAQgDCgoCCgIKAgMDAwoCCQYMCAAIAAsBAQgCAwsBAQgCAwsBAQgCAwkFCgIKAgYLAQEIAgMGCwEBCAIDBgsBAQgCAwIGDAgAAgUKAgUGDAMIAAMIAAoGDAgACwEBCAIDCAAIAAMDAwgACgUKAgYLAQEIAgMKAgoCAwMDCgIBBgwBBQEGCAABBgoCDAcKCgIKAgoCBQUGCAADAwoKAgYKCAAGCggABggAAQgAAQoCFQcKCgIHCgoCCgoCCgIKAgUFBggABggAAwMDAwoKAgoKAgYIAAYKCAAGCggABggABgoIAAYKCAAKBwoKAgoCBQYIAAMDCgoCBgoIAAYKCAAGCAATBwoKAgcKCgIKCgIKAgUGCAAGCAADAwMDCgoCCgoCBgoIAAYKCAAGCAAGCggABgoIAAYIAAsHCgoCBgsBAQgDCgIFBggAAwMKCgIGCggABgoIAAYIAAIIBAgAAQgEAQsFAQkAAgcIBAsFAQgAAQcIBAEJAAQHCAQLBQEIAAEPAwcIBAsFAQgACAABBggEAQYIBgZjb3Ntb3MKY29sbGVjdGlvbg5mdW5naWJsZV9hc3NldARqc29uBm9iamVjdAZvcHRpb24Gc2lnbmVyC3NpbXBsZV9qc29uBnN0cmluZwZTdHJpbmcGT2JqZWN0CE1ldGFkYXRhCGRlbGVnYXRlEWRlbGVnYXRlX2ludGVybmFsE2Z1bmRfY29tbXVuaXR5X3Bvb2wcZnVuZF9jb21tdW5pdHlfcG9vbF9pbnRlcm5hbAxtb3ZlX2V4ZWN1dGUVbW92ZV9leGVjdXRlX2ludGVybmFsFm1vdmVfZXhlY3V0ZV93aXRoX2pzb24LbW92ZV9zY3JpcHQUbW92ZV9zY3JpcHRfaW50ZXJuYWwVbW92ZV9zY3JpcHRfd2l0aF9qc29uCkNvbGxlY3Rpb24MbmZ0X3RyYW5zZmVyFW5mdF90cmFuc2Zlcl9pbnRlcm5hbAdwYXlfZmVlEHBheV9mZWVfaW50ZXJuYWwIc3RhcmdhdGURc3RhcmdhdGVfaW50ZXJuYWwNc3RhcmdhdGVfdm90ZQh0cmFuc2ZlchF0cmFuc2Zlcl9pbnRlcm5hbAphZGRyZXNzX29mBWJ5dGVzEFNpbXBsZUpzb25PYmplY3QFZW1wdHkGT3B0aW9uBG5vbmUKc2V0X29iamVjdA5pbmNyZWFzZV9kZXB0aAR1dGY4BHNvbWULc2V0X2ludF9yYXcKc2V0X3N0cmluZwpKc29uT2JqZWN0DnRvX2pzb25fb2JqZWN0CXN0cmluZ2lmeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgoCAQAKAgwLcHJvcG9zYWxfaWQKAgYFdm90ZXIKAgcGb3B0aW9uCgIJCG1ldGFkYXRhCgIGBUB0eXBlCgIXFi9jb3Ntb3MuZ292LnYxLk1zZ1ZvdGUAAQQAAQkLABETDgERFBQOAgsDEQECAQACAAIBBAABBgsAERMOAQsCEQMCAwACAAQBBAAYOgsAERMMCgsBDAkOAhEUFAwIDgMRFBQMBw4EDA8HAAwOCw8MEAYAAAAAAAAAAAwMChBBGQwNCgwKDSMELwUdChAKDEIZDAsNDgwGCwsMEQsGCxERFBREGgsMBgEAAAAAAAAAFgwMBRgLEAELCgsJCwgLBwsOCwUJEQUCBQACAAYBBAAbYAsAERMMDAsBDAsOAhEUFAwKDgMRFBQMCQ4EDBYHAAwTCxYMFwYAAAAAAAAAAAwPChdBGQwRCg8KESMELwUdChcKD0IZDA0NEwwHCw0MGAsHCxgRFBREGgsPBgEAAAAAAAAAFgwPBRgLFwELEwwIDgUMGQcA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",
        "",
        "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",
        "",
        "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MTI4BWVycm9yA25mdAZvYmplY3QGb3B0aW9uB3JveWFsdHkGc2lnbmVyBnN0cmluZwlJbml0aWFOZnQTSW5pdGlhTmZ0Q29sbGVjdGlvbgZPYmplY3QEYnVybgZTdHJpbmcGT3B0aW9uCkRlY2ltYWwxMjgRY3JlYXRlX2NvbGxlY3Rpb24JRXh0ZW5kUmVmGGNyZWF0ZV9jb2xsZWN0aW9uX29iamVjdCFpc19tdXRhYmxlX2NvbGxlY3Rpb25fZGVzY3JpcHRpb24laXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF9kZXNjcmlwdGlvbh1pc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3VyaR1pc19tdXRhYmxlX2NvbGxlY3Rpb25fcm95YWx0eRlpc19tdXRhYmxlX2NvbGxlY3Rpb25fdXJpFmlzX211dGFibGVfZGVzY3JpcHRpb24OaXNfbXV0YWJsZV91cmkEbWludA5Db25zdHJ1Y3RvclJlZg1taW50X2ludGVybmFsD21pbnRfbmZ0X29iamVjdBpzZXRfY29sbGVjdGlvbl9kZXNjcmlwdGlvbgdSb3lhbHR5GHNldF9jb2xsZWN0aW9uX3JveWFsdGllcx1zZXRfY29sbGVjdGlvbl9yb3lhbHRpZXNfY2FsbBJzZXRfY29sbGVjdGlvbl91cmkPc2V0X2Rlc2NyaXB0aW9uB3NldF91cmkIYnVybl9yZWYHQnVyblJlZgttdXRhdG9yX3JlZgpNdXRhdG9yUmVmE3JveWFsdHlfbXV0YXRvcl9yZWYTbXV0YWJsZV9kZXNjcmlwdGlvbgttdXRhYmxlX3VyaRdtdXRhYmxlX25mdF9kZXNjcmlwdGlvbg9tdXRhYmxlX25mdF91cmkOb2JqZWN0X2FkZHJlc3MJbm90X2ZvdW5kCmFkZHJlc3Nfb2YEb3ducxFwZXJtaXNzaW9uX2RlbmllZAdpc19zb21lDWludmFsaWRfc3RhdGUHZXh0cmFjdAZjcmVhdGUEc29tZRdjcmVhdGVfZml4ZWRfY29sbGVjdGlvbhtjcmVhdGVfdW5saW1pdGVkX2NvbGxlY3Rpb24PZ2VuZXJhdGVfc2lnbmVyFGdlbmVyYXRlX211dGF0b3JfcmVmBG5vbmUTZ2VuZXJhdGVfZXh0ZW5kX3JlZhtvYmpl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AQEKCQACCAEICRMICQsLAQgJCAkLCwEICQgJCwsBCAkICQsLAQgJAwMGCAALCwEICQgBCAECCAkICQoICQoIBAEIBAtzaW1wbGVfanNvbgRqc29uCmRlY2ltYWwyNTYFZXJyb3IGb3B0aW9uCnNpbXBsZV9tYXAGc3RyaW5nBnZlY3RvcghKc29uRWxlbQlKc29uSW5kZXgKSnNvbk9iamVjdAlKc29uVmFsdWUIS2V5VmFsdWUQTmF0aXZlQXJyYXlWYWx1ZRFOYXRpdmVPYmplY3RWYWx1ZQZOdW1iZXIHYXNfYm9vbApEZWNpbWFsMjU2BmFzX2RlYwZhc19pbnQJYXNfbnVtYmVyBlN0cmluZwlhc19zdHJpbmcGYm9ycm93CmJvcnJvd19tdXQJU2ltcGxlTWFwBGRhdGEFZW1wdHkEZmluZBBnZXRfY2hpbGRfbGVuZ3RoCWdldF9kZXB0aA5nZXRfaW5kZXhfbGFzdA5nZXRfbmV4dF9pbmRleA5nZXRfcHJldl9pbmRleAhnZXRfdHlwZQhpc19hcnJheQdpc19ib29sB2lzX251bGwNaXNfbnVsbF9pbmRleAlpc19udW1iZXIJaXNfb2JqZWN0CWlzX3N0cmluZwluZXdfYXJyYXkIbmV3X2Jvb2wHbmV3X2RlYwduZXdfaW50Cm5ld19udW1iZXIKbmV3X29iamVjdApuZXdfc3RyaW5nBXBhcnNlC3BhcnNlX2FycmF5CnBhcnNlX2Jvb2wGT3B0aW9uDnBhcnNlX2ludGVybmFsDHBhcnNlX251bWJlcgxwYXJzZV9vYmplY3QMcGFyc2Vfc3RyaW5nCXNldF9hcnJheQhzZXRfYm9vbBBzZXRfY2hpbGRfbGVuZ3RoDnNldF9kZWNfc3RyaW5nCHNldF9lbGVtC3NldF9pbnRfcmF3DnNldF9pbnRfc3RyaW5nCnNldF9udW1iZXIKc2V0X29iamVjdApzZXRfc3RyaW5nC3N0YXJ0X2luZGV4CXN0cmluZ2lmeQ9zdHJpbmdpZnlfYXJyYXkOc3RyaW5naWZ5X2Jvb2wSc3RyaW5naWZ5X2ludGVybmFsEHN0cmluZ2lmeV9udW1iZXIQc3RyaW5naWZ5X29iamVjdBBzdHJpbmdpZnlfc3RyaW5nC3VucGFja19lbGVtA2tleQV2YWx1ZQR0eXBlCnZhbHVlX2Jvb2wMdmFsdWVfbnVtYmVyDHZhbHVlX3N0cmluZwxjaGlsZF9sZW5ndGgLaXNfcG9zaXRpdmUQaW52YWxpZF9hcmd1bWVudANuZXcGY3JlYXRlBWJ5dGVzBG5vbmUEc29tZQN2YWwHcmV2ZXJzZQxjb250YWluc19rZXkDYWRkCXNpbmdsZXRvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgFAAAAAAAAAAMIAgAAAAAAAAADCAcAAAAAAAAAAwgGAAAAAAAAAAMIAwAAAAAAAAADCAEAAAAAAAAAAwgEAAAAAAAAAAIBBAIBAQIBAAIBAgIBBQIBAwIB/xNpbml0aWE6Om1ldGFkYXRhX3YwtQEHAQAAAAAAAAASRVNFUkRFX0RFU0VSSUFMSVpFAAIAAAAAAAAADUVJTlZBTElEX0FSR1MAAwAAAAAAAAANRU9VVF9PRl9SQU5HRQAEAAAAAAAAAA5FVFlQRV9NSVNNQVRDSAAFAAAAAAAAABFFRFVQTElDQVRFRF9JTkRFWAAGAAAAAAAAABNFTk9UX1NVUFBPUlRFRF9UWVBFAAcAAAAAAAAADkVLRVlfTk9UX0ZPVU5EAAAAAAICTAsLAQgJTQgDAQIBGgoDAgIBGgsKAggBCAADAgVOAk8LCwEBUAsLAQgHUQsLAQgJUgMEAgJMCAlNCAkFAgJOAk0ICQYCA04CTAgJTQgJBwIDTgJND1MBAAEAAAwODgAQABQHCCEEBwUJBwYnDgAQATgAFAIBAQAABBULABEDDAEOARACFAcIIQQKBQ0HBhE5Jw4BEAMUDgEQBBQROgICAQAABBQLABEDDAEOARACFAcJIQQKBQ0HBhE5Jw4BEAMUDgEQBBQCAwAAAAwODgAQABQHCiEEBwUJBwYnDgAQBTgBFAIEAQAADA4OABAAFAcMIQQHBQkHBicOABAGOAIUAgUBAAAMBQsAEAcLATgDAgYBAAAMBQsADwcLATgEAgcBAAAMAwsAEAcCCAEAAAwDOAUSAgIJAQAAMEAGAAAAAAAAAAAMBQoACgERBQwECgUKBBAIEAkUIwQ7BQ4KAQoFEQ0MBgoADgYRBRAKOAIRPhQKAhE+FCEEIwsAAQsCAQUoCwUGAQAAAAAAAAAWDAUFBgoFCwQQCBAJFCYENQsBAUAQAAAAAAAAAAASAQwDBTkLAQsFEQ0MAwsDAgsAAQsCAQUoCgMAAAwFCwAQCBAJFAILAQAADAQLABALQRACDAEAABAMCgAQC0EQDAELABALCwEGAQAAAAAAAAAXQhAUAg0BAAAPCQsAFAwCDQIPCwsBRBALAgIOAQAAEwoLABQMAQ0BDwtFEAwCCwELAgIPAQIAEAEAAAwFCwARDwcHIQIRAQAADAULABEPBwghAhIBAAAMBQsAEQ8HCSECEwEAAAENCwAQC0EQBgAAAAAAAAAAIQQJCAwBBQsJDAELAQIUAQAADAULABEPBwohAhUBAAAMBQsAEQ8HCyECFgEAAAwFCwARDwcMIQIXAQAADAcHBzgGOAc4CAsAEgMCGAEAAAwIBwgLADgJOAc4CAYAAAAAAAAAABIDAhkBAAAMBwcIDgERQQsAEgcRGwIaAQAADAYHCQsBCwASBxEbAhsAAAAMCAcKOAYLADgKOAgGAAAAAAAAAAASAwIcAQAADAcHCzgGOAc4CAsAEgMCHQEAAAwIBww4BjgHCwA4CwYAAAAAAAAAABIDAh4BAAA1DxEIDAIRLwwBDgARDwwDDQILAzgICwALAREhCwICHwACACAAAgAhAAAANqEBCgEHCSIEBQUJCwABBwMnCgEHCCEEFAsACwQLAgsDESARJgWgAQoBBwohBB8LAAsECwILAxEiESwFoAEKAQcMIQQ4CwMRJAwNDg0RDwcKIQQyCwALBAsCCw0RIhEsBTcLAAsECwILDREuBaABCgEHByEEaQsDER8MDg0OOAwODkE3DAoKAAoECwIKChElBgAAAAAAAAAADAYKBgoKIwRmBVANDkU3DAUOBAoGEQ0MCAoADgUQDBQ4CA4FEA0UCwgRIQsGBgEAAAAAAAAAFgwGBUsLAAEFoAELAQcLIQSaAQsDESMMDw0POA0OD0E5DAsKAAoECwIKCxEtBgAAAAAAAAAADAcKBwoLIwSeAQWBAQ0PRTkMDA4ECgcRDQwJCgAODBAOFA4MEA8UOAsODBAQFAsJESELBwYBAAAAAAAAABYMBwV8CwABBwMnCwABAiIAAgAjAAIAJAACACUBAAAMCAsACwELAgsDERcSABEpAiYBAAAMCAsACwELAgsDERgSABEpAicDAAAMBgsBCwAPCA8JFQIoAQAABQ4LAwsEERkRAxE0DAULAAsBCwILBREdEgARKQIpAAAADBEKABAHDgE4DiAEBwULCwABBwAnCwAPBwsBCwI4DwIqAQAADAkLAAsBCwILAwsEERoSABEpAisBAAAFDgsDCwQRGhEDETQMBQsACwELAgsFER0SABEpAiwAAAAMCAsACwELAgsDERsSABEpAi0BAAAMCAsACwELAgsDERwSABEpAi4BAAAMCAsACwELAgsDER0SABEpAi8BAAAMBAYAAAAAAAAAADgQEgECMAEAADwJES8MAQsACwERMwwCAQsCAjEAAgAyAAIAMwAAAD21AQoADgERBQwMCgwQCBAAFAwQChAHCSIEDgUUCwABCwwBBwMnChAHCCEEJQsAAQoMEAoUCwwQCBQRABEyDAYMBQWyAQoQBwohBDYLAAEKDBAKFAsMEAgUEQMRNAwEDAMFrgEKEAcMIQRHCwABCgwQChQLDBAIFBEEETYMAgwJBaoBChAHByEEckAFAAAAAAAAAAAMEwYAAAAAAAAAAAwKCgoKDBAIEAkUIwRoBVcOAQoKEQ0MDgoACw4RMwwRAQ0TCxFEBQsKBgEAAAAAAAAAFgwKBU8LAAELDBAKFAsTETEMCAwHBaYBCxAHCyEElwFAPgAAAAAAAAAADBQGAAAAAAAAAAAMCwoLCgwQCBAJFCMEnQEFggEOAQoLEQ0MDwoACw8RMwwSDA0NFA4NOAIUCxISBEQ+CwsGAQAAAAAAAAAWDAsFegsAAQsMAQcDJwsAAQsMEAoUCxQRNQwIDAcLBwsIDAIMCQsJCwIMBAwDCwMLBAwGDAULBQsGAjQAAgA1AAIANgACADcBAAAMBwoAEAoUCwAQCBQCAwADAQcABwIHAQMCAwMCAAABAwQAAAEABQAFAQYABgEGAgAAAA==",
        "oRzrCwYAAAAMAQAQAhAsAzw+BHoEBX5wB+4B5gII1AQgBvQEFBCIBZ0BCqUGDAyxBrsBDewHBAAAAAEAAgADAAQABQAGAAcACAgABAkHAQABAwoIAAUMBwEAAAcNBwABEQYAARMGAAEVBgADFgAABBwGAAALAAEAAA4CAQAADwMBAAYXBQYABBgICQEIAhkKCgAEGgsGAQgBGwAMAAELDQEAAR0CDwAEHhARAAEfEwEABAcGBwMGDAsBAQgCAwAHBgwLAwEECAQIBAIIBAgEBAYMBQsBAQgCAwQFBggABQgIAQYMAQUBCAICCwEBCQAFAQEBAwELAQEJAAEICAIGCAYICAUIBggJCAcMCAUECAUIBggHCAkBBggJAQwCBQUDBggFBQMMbWFuYWdlZF9jb2luBGNvaW4FZXJyb3IOZnVuZ2libGVfYXNzZXQGb2JqZWN0Bm9wdGlvbgZzaWduZXIGc3RyaW5nDENhcGFiaWxpdGllcwZPYmplY3QITWV0YWRhdGEEYnVybgZPcHRpb24GU3RyaW5nCmluaXRpYWxpemUEbWludAhtaW50X2NhcA5NaW50Q2FwYWJpbGl0eQhidXJuX2NhcA5CdXJuQ2FwYWJpbGl0eQpmcmVlemVfY2FwEEZyZWV6ZUNhcGFiaWxpdHkNRnVuZ2libGVBc3NldAphZGRyZXNzX29mCGlzX293bmVyCW5vdF9mb3VuZA5vYmplY3RfYWRkcmVzcwh3aXRoZHJhdwlFeHRlbmRSZWYiaW5pdGlhbGl6ZV9hbmRfZ2VuZXJhdGVfZXh0ZW5kX3JlZh1nZW5lcmF0ZV9zaWduZXJfZm9yX2V4dGVuZGluZwdtaW50X3RvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAEAAAAAAAAAAwgCAAAAAAAAABNpbml0aWE6Om1ldGFkYXRhX3YwhwECAQAAAAAAAAAQRU5PX0NBUEFCSUxJVElFUylNZXRhZGF0YSBoYXMgbm8gY2FwYWJpbGl0aWVzIChidXJuL21pbnQpLgIAAAAAAAAADUVVTkFVVEhPUklaRUQqQWNjb3VudCBpcyBub3QgYSBvd25lciBvZiBtZXRhZGF0YSBvYmplY3QuAAAAAgMQCAUSCAYUCAcAAQQBAAQmCgARAwwDCgELAzgABAgFDQsAAQcBEQUnCgE4AQwFCgUpAAQUBRkLAAEHABEFJwsFKwAMBAsACwELAhEHDAYLBBAACwYRCAIBAQQADhYLAAsBCwILAwsECwULBhEJDAgMCQwHDAsOCBEKDAoOCgsLCwcLCRIALQACAgEEAQASHAsAEQMMBAoCCwQ4AAQIBQsHAREFJwsCOAEMBQoFKQAEEgUVBwARBScLBSsAEAELAQsDEQsCAAEAAAA=",
        "oRzrCwYAAAAJAQAIAggIAxBGBVYfB3WzAQioAiAGyAIUENwChQEM4QOoCAAAAAEAAgADAggHAAMKBwAABAABAAAFAAEAAAYCAQAABwEDAAAJAQQAAAsBBQAADAABAAANAAEAAA4CAQAADwABAAAQAQEAAREICAACEggEAAMSAQUAAgQEAQQDBAQEAQIBCAABCAEAAgICAQMDAwMCAwQEAgdtYXRoMTI4BWVycm9yDWZpeGVkX3BvaW50MzINZml4ZWRfcG9pbnQ2NAdhdmVyYWdlCGNlaWxfZGl2BWNsYW1wCmZsb29yX2xvZzIMRml4ZWRQb2ludDMyBGxvZzIMRml4ZWRQb2ludDY0B2xvZzJfNjQDbWF4A21pbgdtdWxfZGl2A3BvdwRzcXJ0EGludmFsaWRfYXJndW1lbnQVY3JlYXRlX2Zyb21fcmF3X3ZhbHVlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAIAAAAAAAAAAwgBAAAAAAAAABNpbml0aWE6Om1ldGFkYXRhX3YwcAIBAAAAAAAAABdFSU5WQUxJRF9BUkdfRkxPT1JfTE9HMjFBYm9ydCB2YWx1ZSB3aGVuIGFuIGludmFsaWQgYXJndW1lbnQgaXMgcHJvdmlkZWQuAgAAAAAAAAARRURJVklTSU9OX0JZX1pFUk8AAAAAAQAAARcKAAoBIwQNCgALAQsAFzICAAAAAAAAAAAAAAAAAAAAGhYMAgUVCgELAAsBFzICAAAAAAAAAAAAAAAAAAAAGhYMAgsCAgEBAAABGAoAMgAAAAAAAAAAAAAAAAAAAAAhBA4LATIAAAAAAAAAAAAAAAAAAAAAIgQJBQsHACcyAAAAAAAAAAAAAAAAAAAAAAwCBRYLADIBAAAAAAAAAAAAAAAAAAAAFwsBGjIBAAAAAAAAAAAAAAAAAAAAFgwCCwICAgEAAAYGCwILAQsAEQYRBwIDAQAAByYxAAwCCgAyAAAAAAAAAAAAAAAAAAAAACIEBwUKBwERCycxQAwBCgExACQEJAURCgAyAQAAAAAAAAAAAAAAAAAAAAoBLyYEHwsACgEwDAALAgoBFgwCCwExATAMAQUMCwICBAEAAAk8CgARAwwDCgAyAAAAAAEAAAAAAAAAAAAAACYEDgsACgMxIBcwDAAFFAsAMSAKAxcvDAAGAAAAAAAAAAAMAgYAAACAAAAAAAwBCgEGAAAAAAAAAAAiBDQFHQoACwAYMSAwDAAKADIAAAAAAgAAAAAAAAAAAAAAJgQvCwIKARYMAgsAMQEwDAALATEBMAwBBRgLAzQxIC8LAhYRDAIFAQAACjwKABEDDAMKADIAAAAAAAAAgAAAAAAAAAAAJgQOCwAKAzE/FzAMAAUUCwAxPwoDFy8MADIAAAAAAAAAAAAAAAAAAAAADAIyAAAAAAAAAIAAAAAAAAAAAAwBCgEyAAAAAAAAAAAAAAAAAAAAACIENAUdCgALABgxPzAMAAoAMgAAAAAAAAAAAQAAAAAAAAAmBC8LAgoBFgwCCwAxATAMAAsBMQEwDAEFGAsDNTFALwsCFhENAgYBAAABCwoACgEmBAcLAAwCBQkLAQwCCwICBwEAAAELCgAKASMEBwsADAIFCQsBDAILAgIIAQAABgoLAE0LAU0YCwJNGjUCCQEAAAAnCgEyAAAAAAAAAAAAAAAAAAAAACEEBzIBAAAAAAAAAAAAAAAAAAAADAIFJTIBAAAAAAAAAAAAAAAAAAAADAMKATIBAAAAAAAAAAAAAAAAAAAAJAQhBQ4KATICAAAAAAAAAAAAAAAAAAAAGTIBAAAAAAAAAAAAAAAAAAAAIQQYCwMKABgMAwsBMgIAAAAAAAAAAAAAAAAAAAAaDAEKAAsAGAwABQkLAwsAGAwCCwICCgEAAAE9CgAyAAAAAAAAAAAAAAAAAAAAACEEBjIAAAAAAAAAAAAAAAAAAAAAAjIBAAAAAAAAAAAAAAAAAAAACgARAzEBFjEBMC8MAQoBCgALARoWMQEwDAEKAQoACwEaFjEBMAwBCgEKAAsBGhYxATAMAQoBCgALARoWMQEwDAEKAQoACwEaFjEBMAwBCgELAAsBGhEHAgA=",
        "oRzrCwYAAAAJAQAGAgYEAwo8BUYYB16PAQjtASAGjQIUEKEChQEMpgPHBQAAAAEAAgIHBwAAAwABAAAEAAEAAAUCAQAABgEDAAAIAQQAAAkAAQAACgABAAALAgEAAAwAAQAADQEBAAEOAQEAAg8BBAACAwMBAwMDAwMBAgEIAAACAgIFAwMDAgQGbWF0aDY0BWVycm9yDWZpeGVkX3BvaW50MzIHYXZlcmFnZQhjZWlsX2RpdgVjbGFtcApmbG9vcl9sb2cyDEZpeGVkUG9pbnQzMgRsb2cyA21heANtaW4HbXVsX2RpdgNwb3cEc3FydBBpbnZhbGlkX2FyZ3VtZW50FWNyZWF0ZV9mcm9tX3Jhd192YWx1ZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgCAAAAAAAAAAMIAQAAAAAAAAATaW5pdGlhOjptZXRhZGF0YV92MHACAQAAAAAAAAAXRUlOVkFMSURfQVJHX0ZMT09SX0xPRzIxQWJvcnQgdmFsdWUgd2hlbiBhbiBpbnZhbGlkIGFyZ3VtZW50IGlzIHByb3ZpZGVkLgIAAAAAAAAAEUVESVZJU0lPTl9CWV9aRVJPAAAAAAEAAAEXCgAKASMEDQoACwELABcGAgAAAAAAAAAaFgwCBRUKAQsACwEXBgIAAAAAAAAAGhYMAgsCAgEBAAABGAoABgAAAAAAAAAAIQQOCwEGAAAAAAAAAAAiBAkFCwcAJwYAAAAAAAAAAAwCBRYLAAYBAAAAAAAAABcLARoGAQAAAAAAAAAWDAILAgICAQAABQYLAgsBCwARBREGAgMBAAAGJjEADAIKAAYAAAAAAAAAACIEBwUKBwERCicxIAwBCgExACQEJAURCgAGAQAAAAAAAAAKAS8mBB8LAAoBMAwACwIKARYMAgsBMQEwDAEFDAsCAgQBAAAHPwoAEQMMBAoABgAAAAABAAAAJgQOCwAKBDEgFzAMAQUUCwAxIAoEFy8MAQsBNQwFBgAAAAAAAAAADAMGAAAAgAAAAAAMAgoCBgAAAAAAAAAAIgQ3BSAKBQsFGDEgMAwFCgUyAAAAAAIAAAAAAAAAAAAAACYEMgsDCgIWDAMLBTEBMAwFCwIxATAMAgUbCwQ0MSAvCwMWEQsCBQEAAAELCgAKASYEBwsADAIFCQsBDAILAgIGAQAAAQsKAAoBIwQHCwAMAgUJCwEMAgsCAgcBAAAFCgsANQsBNRgLAjUaNAIIAQAAACcKAQYAAAAAAAAAACEEBwYBAAAAAAAAAAwCBSUGAQAAAAAAAAAMAwoBBgEAAAAAAAAAJAQhBQ4KAQYCAAAAAAAAABkGAQAAAAAAAAAhBBgLAwoAGAwDCwEGAgAAAAAAAAAaDAEKAAsAGAwABQkLAwsAGAwCCwICCQEAAAE1CgAGAAAAAAAAAAAhBAYGAAAAAAAAAAACBgEAAAAAAAAACgARAzEBFjEBMC8MAQoBCgALARoWMQEwDAEKAQoACwEaFjEBMAwBCgEKAAsBGhYxATAMAQoBCgALARoWMQEwDAEKAQsACwEaEQYCAA==",
        "oRzrCwYAAAAMAQAcAhxpA4UB5gME6wQ4BaMFqgcHzQzIDwiVHCAGtRyJAhC+HtAECo4j4wEM8STwKQ3hTiwAAAABAAIAAwAEAAUABgAHAAgACQAKAAsADAANAA4GAAAPBgAAEAYAABEIAAASBgAAEwYAABQIAAAVBgAAFgYAABcIAAAYBgAHGQcBAAEGGggABh0AAAgeBwEAAAMhBwAMLAcAC00IAAdPBgANUQQCAwEAAQJWBgACWAYAB3YCAAKMAQYAABsAAQAAHAIBAAAfAwEAACAEAQAAIgUBAAAjBgEAACQAAQAAJQcIAAAmCQgAACcKCwAAKAwLAAApDQwAACoOCAAAKw8MAAAtEAwAAC4PDAAALxAMAAAwEQsAADEKCwAAMgIBAAAzEhMAADQUEwAANQEUAAA2CgsAADcVAQAAOBYWAAA5FwEAADoYFgAAOwEUAAA8GQEAAD0YFgAAPhoMAAA/GwwAAEAaHAAAQQELAABCHQEAAEMeAQAARBUBAABFFhYADWkhIgIDAAdqJCUBCAprAiUABGwLCwAIbSYTAQAGbhILAAhvJygBAARwCwsABHELCwADcgwIAANzKisAA3QsCwAFdSgBAQYHdy8wAAd4MTIAB3kxMwABegEMAAd7MSQBCA18NAECAwACfRQ3AAJ+OBQAB385MwAMgAE6NwAMgQE7AQACRAQWAAsiPBYABoIBEhQAB4MBJD4CCAgJhAFAAQADhQEBCAADhgErCAADhwEHCAADiAFFKwADiQEJCAADfAkIAAKKATcUAAiLAShJAQACjQFKSwANhgEBTAIDBAeOAU0lAAePASUkAQgJRFAWAQgHkAE5JQACkQFTFgALPFcWAA2SASETAgMACz5cDAAGkwEkXQEICGkmXgEAApQBYgEAJyAoIysLLQszLTgjOSAzNUI9OT8zQUsrTSBNP09OUE4zUjNVJz8zWVQ/VCBWTlcrKwgtCDNgM2MCBgwLCwEIDAABBgwCBggNCw4BAwMGDAsLAQgMAwcGDAsLAQgMCA8DAwgPCA8EBgwLCwEIDAMDAgQEAQgPAgYIDwYIDwMDAwMBAwIDAwMDBggPAwMGCA8GCA8GCA8CCwsBCAwBAggQAQUDAwMDAwEGCA0BAQELCwEIDAMGDAMLDgEDAQgNBAYMCwsBCAwDCw4BAwIIDQsLAQgMBQYMCwsBCAwLCwEIDAMLDgEDAwsLAQgMCwsBCAwDAwgQCBADAwMDAQMGDAsOAQgPCw4BCA8GBgwLCwEIDAsOAQgPCw4BAwsOAQgPCw4BCA8CCwsBCAwHCAkCCwsBCAwLCwEICQIGCxMCCQAJAQkAAQYJAQEICQELCwEJAAEFAQYLDgEJAAEHCw4BCQABCQAQCwsBCAwIDwgPAwMDAwMDBwgDAwMHCAkIDwMDAQYIDwEEAgYIDwMBCAAOCBIDBgwIDwMIDwgPAwMDCBYIEgwDAgUBAQgWAQYIFgEIEgEMAwcLEwIJAAkBCQAJAQEIAQkKCA0MCBAIDQsLAQgMBwgDCwsBCBEHCAYIEAEIEAIFCBABBggSAQoCAgcIEAgQBgYMCBAIEAgPCggNAwIIDAgRAQsLAQkBAgsLAQgMCwsBCBECBQgNAQgCBAgPDw8PCA8PDw8DDw8PDggPAwQECA8EAwQEBAQEBAQCBggPBAwIDwYIDwgPCA8ECA8IDwYIDwgPCA8IDwgPFwEDAwMDAwgPCA8DCwsBCAwGCAMGCAkGCAkGCAkIDwMDAwMDAwMDBAgVCBYIEggUAQsOAQkABwYMCw4BBAgQCBACCBAIEAMIFAgVCBcBCxMCCQAJAQIFCgIBCAwDBAQEAwYMCwsBCQADBQMHCAMDAwMBCAQCBggUAw0DAwsLAQgMDAwHCAMHCAMDBwgJBwgJDAwDAQgFBgsLAQgMCA0LCwEIDAgNCA0BBAsLAQgRCA0LCwEIDAsOAQMwBwgDCA0HCAkMDAEDAwMBCA8DCA8BAwsLAQgMCwsBCAwFDAwMBwgDBwgDBwgDAwsLAQgMAwMHCAkHCAkHCAkGCAkFDAwMCA8DAwMDCA0DAwMDAwMBCAcCCwsBCAwLCwEIDCALCwEIDAMDAwMDAQMDAQEDAwEDCwsBCAwDCwsBCAwLCwEIDAsLAQgMBggDBggDBggJBggJAwMBAwMBAwMECwsBCBELCwEIDAsLAQgMAwELDgEEAQYJAAEHCAMBCAgFDAcIAwMDAwIGCBUIDQEICgltaW5pdHN3YXAFYmxvY2sEY29pbgpkZWNpbWFsMTI4BWVycm9yBWV2ZW50DmZ1bmdpYmxlX2Fzc2V0Bm9iamVjdAZvcHRpb24WcHJpbWFyeV9mdW5naWJsZV9zdG9yZQZzaWduZXIKc3RhYmxlc3dhcAZzdHJpbmcFdGFibGUTQ2hhbmdlUG9vbFNpemVFdmVudA9DcmVhdGVQb29sRXZlbnQZQ3JlYXRlU3RhYmxlc3dhcFBvb2xFdmVudAtNb2R1bGVTdG9yZQxQcm92aWRlRXZlbnQOUmViYWxhbmNlRXZlbnQTU3RhYmxlc3dhcFBvb2xTdG9yZQlTd2FwRXZlbnQVVXBkYXRlUG9vbFBhcmFtc0V2ZW50C1ZpcnR1YWxQb29sDVdpdGhkcmF3RXZlbnQGT2JqZWN0CE1ldGFkYXRhCGFjdGl2YXRlD2Fzc2VydF9pc19jaGFpbg1GdW5naWJsZUFzc2V0Bk9wdGlvbhFhc3NlcnRfbWluX2Ftb3VudBBjaGFuZ2VfcG9vbF9zaXplCkRlY2ltYWwxMjgLY3JlYXRlX3Bvb2wWY3JlYXRlX3N0YWJsZXN3YXBfcG9vbApkZWFjdGl2YXRlGmRlY2ltYWwxMjhfc2FmZV9mcm9tX3JhdGlvE2RlY2ltYWwxMjhfc2FmZV9tdWwFZ2V0X2QGZ2V0X2QwIGdldF9mdWxseV9yZWNvdmVyZWRfcG9vbF9hbW91bnRzGWdldF9mdWxseV9yZWNvdmVyZWRfcmF0aW8WZ2V0X3BlZ19rZWVwZXJfYmFsYW5jZQZTdHJpbmcfZ2V0X3BlZ19rZWVwZXJfYmFsYW5jZV9ieV9kZW5vbQ9nZXRfcG9vbF9hbW91bnQYZ2V0X3Bvb2xfYW1vdW50X2J5X2Rlbm9tEWdldF9yZXR1cm5fYW1vdW50BWdldF95C2luaXRfbW9kdWxlCmlzX2wxX2luaXQTaXNfbDFfaW5pdF9tZXRhZGF0YRBsMV9pbml0X21ldGFkYXRhB211bF9kaXYHcHJvdmlkZRBwcm92aWRlX2ludGVybmFsCXJlYmFsYW5jZRJyZWJhbGFuY2VfaW50ZXJuYWwUc2hhcmVfdG9rZW5fbWV0YWRhdGEEc3dhcA1zd2FwX2ludGVybmFsD3N3YXBfc2ltdWxhdGlvbhhzd2FwX3NpbXVsYXRpb25fYnlfZGVub20Yc3dhcF9zaW11bGF0aW9uX2ludGVybmFsC3RvdGFsX3NoYXJlFHVwZGF0ZV9tb2R1bGVfcGFyYW1zEnVwZGF0ZV9wb29sX3BhcmFtcwh3aXRoZHJhdxF3aXRoZHJhd19pbnRlcm5hbBBsMl9pbml0X21ldGFkYXRhCXBvb2xfc2l6ZRByZWNvdmVyX3ZlbG9jaXR5A2FubgltYXhfcmF0aW8NcmVjb3Zlcl9wYXJhbQRwb29sBFBvb2wKZXh0ZW5kX3JlZglFeHRlbmRSZWYFcG9vbHMFVGFibGUObDFfaW5pdF9hbW91bnQNc3dhcF9mZWVfcmF0ZQ9tYXhfY2hhbmdlX3JhdGUIbWludF9jYXAOTWludENhcGFiaWxpdHkIYnVybl9jYXAOQnVybkNhcGFiaWxpdHkOcHJvdmlkZV9hbW91bnQMc2hhcmVfYW1vdW50Cm9mZmVyX2NvaW4LcmV0dXJuX2NvaW4Mb2ZmZXJfYW1vdW50DXJldHVybl9hbW91bnQKZmVlX2Ftb3VudBdwZWdfa2VlcGVyX29mZmVyX2Ftb3VudBhwZWdfa2VlcGVyX3JldHVybl9hbW91bnQObDFfcG9vbF9hbW91bnQObDJfcG9vbF9hbW91bnQYbGFzdF9yZWNvdmVyZWRfdGltZXN0YW1wEnZpcnR1YWxfbDFfYmFsYW5jZRJ2aXJ0dWFsX2wyX2JhbGFuY2UGYWN0aXZlD3dpdGhkcmF3X2Ftb3VudAZib3Jyb3cOb2JqZWN0X2FkZHJlc3MKYWRkcmVzc19vZhFwZXJtaXNzaW9uX2RlbmllZAdpc19zb21lBmFtb3VudAdleHRyYWN0DWludmFsaWRfc3RhdGUQaW52YWxpZF9hcmd1bWVudA5mcm9tX3JhdGlvX3U2NAN2YWwHbXVsX3U2NARlbWl0DkNvbnN0cnVjdG9yUmVmDWNyZWF0ZV9vYmplY3QTZ2VuZXJhdGVfZXh0ZW5kX3JlZg9nZW5lcmF0ZV9zaWduZXIOZ2V0X2Jsb2NrX2luZm8bb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmA2FkZAZzeW1ib2wIbWV0YWRhdGEdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcEdXRmOAZhcHBlbmQTbWV0YWRhdGFfZnJvbV9hc3NldAdjb252ZXJ0B2RlcG9zaXQDb25lA25ldwpmcm9tX3JhdGlvCG11bF91MTI4A3N1YhFkZW5vbV90b19tZXRhZGF0YQRzb21lEEZyZWV6ZUNhcGFiaWxpdHkKaW5pdGlhbGl6ZRVjcmVhdGVfb2JqZWN0X2FkZHJlc3MRYWRkcmVzc190b19vYmplY3QXYWRkcmVzc19mcm9tX2V4dGVuZF9yZWYEbWludAhjb250YWlucwZzdXBwbHkEYnVybgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDyBkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMIBQAAAAAAAAADCAcAAAAAAAAAAwgIAAAAAAAAAAMICQAAAAAAAAADCAEAAAAAAAAAAwgEAAAAAAAAAAMIAwAAAAAAAAADCAsAAAAAAAAAAwgGAAAAAAAAAAMIAgAAAAAAAAADCAoAAAAAAAAACgINDG1pbml0c3dhcF9scAQQ//////////8AAAAAAAAAAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKAggHSU5JVCAtIAoCGhltaW5pdHN3YXAgbGlxdWlkaXR5IHRva2VuCgIBAAoCBgV1aW5pdBNpbml0aWE6Om1ldGFkYXRhX3YwugQLAQAAAAAAAAAKRU5PVF9DSEFJTgACAAAAAAAAAA9FUE9PTF9OT1RfRk9VTkQAAwAAAAAAAAAMRU5PVF9MMV9JTklUAAQAAAAAAAAAE0VOT1RfRU5PVUdIX0JBTEFOQ0UABQAAAAAAAAAJRUlOQUNUSVZFAAYAAAAAAAAAEEVOT1RfU0hBUkVfVE9LRU4ABwAAAAAAAAARRUwyX1BSSUNFX1RPT19MT1cACAAAAAAAAAALRU1BWF9DSEFOR0UACQAAAAAAAAALRU1JTl9SRVRVUk4ACgAAAAAAAAAKRVBPT0xfU0laRQALAAAAAAAAAAxFTk9UX0wyX0lOSVQACAlTd2FwRXZlbnQBBAAMUHJvdmlkZUV2ZW50AQQADVdpdGhkcmF3RXZlbnQBBAAOUmViYWxhbmNlRXZlbnQBBAAPQ3JlYXRlUG9vbEV2ZW50AQQAE0NoYW5nZVBvb2xTaXplRXZlbnQBBAAVVXBkYXRlUG9vbFBhcmFtc0V2ZW50AQQAGUNyZWF0ZVN0YWJsZXN3YXBQb29sRXZlbnQBBAAGD2dldF9wb29sX2Ftb3VudAEBAA9zd2FwX3NpbXVsYXRpb24BAQAWZ2V0X3BlZ19rZWVwZXJfYmFsYW5jZQEBABhnZXRfcG9vbF9hbW91bnRfYnlfZGVub20BAQAYc3dhcF9z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AQMDAQYLCwEJAAEGCQAPCgoCBQMFAwMDAwoKAgoICggKCAoBAgMBCgIBCAoIAwUFBwgECAULDAIFAQoFCgUBCAgCBgUHAQIGCwwCCQAJAQYJAAIHCwwCCQAJAQYJAAUGCAUHCAQHCAYGCAYFAQgJBgEDAwYFBgoFAwhtdWx0aXNpZwVibG9jawZjb3Ntb3MFZXJyb3IFZXZlbnQGb2JqZWN0Bm9wdGlvbgZzaWduZXIKc2ltcGxlX21hcAZzdHJpbmcFdGFibGUGdmVjdG9yDkNvbmZpZ1Jlc3BvbnNlGkNyZWF0ZU11bHRpc2lnQWNjb3VudEV2ZW50E0NyZWF0ZVByb3Bvc2FsRXZlbnQURXhlY3V0ZVByb3Bvc2FsRXZlbnQOTXVsdGlzaWdXYWxsZXQGUGVyaW9kCFByb3Bvc2FsEFByb3Bvc2FsUmVzcG9uc2URVXBkYXRlQ29uZmlnRXZlbnQRVm90ZVByb3Bvc2FsRXZlbnQGU3RyaW5nBk9wdGlvbhdjcmVhdGVfbXVsdGlzaWdfYWNjb3VudA9jcmVhdGVfcHJvcG9zYWwQZXhlY3V0ZV9wcm9wb3NhbApnZXRfY29uZmlnDGdldF9wcm9wb3NhbA1nZXRfcHJvcG9zYWxzE2lzX3Byb3Bvc2FsX2V4cGlyZWQdcHJvcG9zYWxfdG9fcHJvcG9zYWxfcmVzcG9uc2UNdXBkYXRlX2NvbmZpZwlTaW1wbGVNYXAEdm90ZQ12b3RlX3Byb3Bvc2FsDnllc192b3RlX2NvdW50DW11bHRpc2lnX2FkZHIOY29uZmlnX3ZlcnNpb24HbWVtYmVycwl0aHJlc2hvbGQRbWF4X3ZvdGluZ19wZXJpb2QLcHJvcG9zYWxfaWQObW9kdWxlX2FkZHJlc3MLbW9kdWxlX25hbWUNZnVuY3Rpb25fbmFtZQl0eXBlX2FyZ3MEYXJncwhleGVjdXRvcgpleHRlbmRfcmVmCUV4dGVuZFJlZglwcm9wb3NhbHMFVGFibGUGaGVpZ2h0CXRpbWVzdGFtcBJwcm9wb3NhbF90aW1lc3RhbXAPcHJvcG9zYWxfaGVpZ2h0BXZvdGVzBnN0YXR1cwV2b3Rlcgh2b3RlX3llcw5Db25zdHJ1Y3RvclJlZgphZGRyZXNzX29mCGNvbnRhaW5zEXBlcm1pc3Npb25fZGVuaWVkEGludmFsaWRfYXJndW1lbnQFYnl0ZXMTY3JlYXRlX25hbWVkX29iamVjdBNnZW5lcmF0ZV9leHRlbmRfcmVmD2dlbmVyYXRlX3NpZ25lcgZjcmVhdGUHcmV2ZXJzZQNhZGQDbmV3BGVtaXQOZ2V0X2Jsb2NrX2luZm8GbGVuZ3RoCmJvcnJvd19tdXQNaW52YWxpZF9zdGF0ZR1nZW5lcmF0ZV9zaWduZXJfZm9yX2V4dGVuZGluZwxtb3ZlX2V4ZWN1dGUGYm9ycm93CVRhYmxlSXRlcgRub25lBGl0ZXIHcHJlcGFyZQRuZXh0B2lzX3NvbWUEdXRmOAxjb250YWluc19rZXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIBAAAAAAAAAADCAEAAAAAAAAAAwgCAAAAAAAAAAMICAAAAAAAAAADCAMAAAAAAAAAAwgHAAAAAAAAAAMIBQAAAAAAAAADCAkAAAAAAAAAAwgGAAAAAAAAAAIBHgoKAiMDEGluIHZvdGluZyBwcmVpb2QIZXhlY3V0ZWQHZXhwaXJlZBNpbml0aWE6Om1ldGFkYXRhX3YwtgMJAQAAAAAAAAASRUlOVkFMSURfVEhSRVNIT0xEAAIAAAAAAAAAC0VOT1RfTUVNQkVSAAMAAAAAAAAAE0VPTERfQ09ORklHX1ZFUlNJT04ABAAAAAAAAAAYRUlOVkFMSURfUFJPUE9TQUxfU1RBVFVTAAUAAAAAAAAAEUVQUk9QT1NBTF9FWFBJUkVEAAYAAAAAAAAAJkVVUERBVEVfQ09ORklHX1BST1BPU0FMX0FMUkVBRFlfRVhJU1RTAAcAAAAAAAAAGEVQUk9QT1NBTF9BTFJFQURZX0VYSVNUUwAIAAAAAAAAAAlFTk9UX1BBU1MACQAAAAAAAAATRVBST1BPU0FMX05PVF9GT1VORAAFEVVwZGF0ZUNvbmZpZ0V2ZW50AQQAEVZvdGVQcm9wb3NhbEV2ZW50AQQAE0NyZWF0ZVByb3Bvc2FsRXZlbnQBBAAURXhlY3V0ZVByb3Bvc2FsRXZlbnQBBAAaQ3JlYXRlTXVsdGlzaWdBY2NvdW50RXZlbnQBBAADCmdldF9jb25maWcBAQAMZ2V0X3Byb3Bvc2FsAQEADWdldF9wcm9wb3NhbHMBAQAAAgUlBSYDJwoF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c3RydWN0b3JSZWYGT3B0aW9uB1JveWFsdHkGY3JlYXRlEmNyZWF0ZV9uZnRfYWRkcmVzcw9jcmVhdGVfbmZ0X3NlZWQHY3JlYXRvcgtkZXNjcmlwdGlvbhFnZW5lcmF0ZV9idXJuX3JlZhRnZW5lcmF0ZV9tdXRhdG9yX3JlZgZpc19uZnQIbmZ0X2luZm8JbmZ0X2luZm9zD3NldF9kZXNjcmlwdGlvbgdzZXRfdXJpCHRva2VuX2lkA3VyaQpkZWxldGVfcmVmCURlbGV0ZVJlZhJtdXRhdGVkX2ZpZWxkX25hbWUJb2xkX3ZhbHVlCW5ld192YWx1ZQRzZWxmF2FkZHJlc3NfZnJvbV9kZWxldGVfcmVmBmRlbGV0ZQlleGlzdHNfYXQQZGVjcmVtZW50X3N1cHBseQ5vYmplY3RfYWRkcmVzcwlub3RfZm91bmQEbmFtZQphZGRyZXNzX29mE2NyZWF0ZV9uYW1lZF9vYmplY3QGbGVuZ3RoDG91dF9vZl9yYW5nZQ9nZW5lcmF0ZV9zaWduZXIZY3JlYXRlX2NvbGxlY3Rpb25fYWRkcmVzcxFhZGRyZXNzX3RvX29iamVjdBBpbmNyZW1lbnRfc3VwcGx5B2lzX3NvbWUHZXh0cmFjdARpbml0FWNyZWF0ZV9vYmplY3RfYWRkcmVzcwVieXRlcwZhcHBlbmQTZ2VuZXJhdGVfZGVsZXRlX3JlZhtvYmplY3RfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYQaW52YWxpZF9hcmd1bWVudANnZXQEdXRmOARlbWl0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAcAAAAAAAAAAwgDAAAAAAAAAAMIAQAAAAAAAAADCAQAAAAAAAAAAwgCAAAAAAAAAAMICAAAAAAAAAADCAYAAAAAAAAAAwgACAAAAAAAAAMIgAAAAAAAAAADCB4AAAAAAAAAAwgAAgAAAAAAAAoCAwI6OgoCDAtkZXNjcmlwdGlvbgoCBAN1cmkTaW5pdGlhOjptZXRhZGF0YV92MOAEBwEAAAAAAAAAE0VORlRfRE9FU19OT1RfRVhJU1QWVGhlIG5mdCBkb2VzIG5vdCBleGlzdAIAAAAAAAAADEVOT1RfQ1JFQVRPUiZUaGUgcHJvdmlkZWQgc2lnbmVyIGlzIG5vdCB0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ZhdhZGRyZXNzX2Zyb21fZGVsZXRlX3JlZhdhZGRyZXNzX2Zyb21fZXh0ZW5kX3JlZhFhZGRyZXNzX3RvX29iamVjdBdjYW5fZ2VuZXJhdGVfZGVsZXRlX3JlZgdjb252ZXJ0GmNyZWF0ZV9ndWlkX29iamVjdF9hZGRyZXNzE2NyZWF0ZV9uYW1lZF9vYmplY3QNY3JlYXRlX29iamVjdBVjcmVhdGVfb2JqZWN0X2FkZHJlc3MWY3JlYXRlX29iamVjdF9pbnRlcm5hbBpjcmVhdGVfdXNlcl9kZXJpdmVkX29iamVjdCJjcmVhdGVfdXNlcl9kZXJpdmVkX29iamVjdF9hZGRyZXNzBmRlbGV0ZRhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIXZW5hYmxlX3VuZ2F0ZWRfdHJhbnNmZXIJZXhpc3RzX2F0E2dlbmVyYXRlX2RlbGV0ZV9yZWYTZ2VuZXJhdGVfZGVyaXZlX3JlZhNnZW5lcmF0ZV9leHRlbmRfcmVmHGdlbmVyYXRlX2xpbmVhcl90cmFuc2Zlcl9yZWYPZ2VuZXJhdGVfc2lnbmVyHWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nFWdlbmVyYXRlX3RyYW5zZmVyX3JlZglpc19vYmplY3QIaXNfb3duZXIOb2JqZWN0X2FkZHJlc3Mbb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmFm9iamVjdF9mcm9tX2RlbGV0ZV9yZWYFb3duZXIEb3ducwh0cmFuc2Zlcg10cmFuc2Zlcl9jYWxsDHRyYW5zZmVyX3JhdxJ0cmFuc2Zlcl90b19vYmplY3QRdHJhbnNmZXJfd2l0aF9yZWYYdW5nYXRlZF90cmFuc2Zlcl9hbGxvd2VkHXZlcmlmeV91bmdhdGVkX2FuZF9kZXNjZW5kYW50BHNlbGYKY2FuX2RlbGV0ZQd2ZXJzaW9uBWlubmVyFmFsbG93X3VuZ2F0ZWRfdHJhbnNmZXIEZnJvbQJ0bwlub3RfZm91bmQCSUQJY3JlYXRlX2lkCHRvX2J5dGVzCHNoYTNfMjU2CnRvX2FkZHJlc3MKYWRkcmVzc19vZhdnZW5lcmF0ZV91bmlxdWVfYWRkcmVzcwZhcHBlbmQVY3JlYXRlX29iamVjdF9hY2NvdW50DmFscmVhZHlfZXhpc3RzDWNyZWF0ZV9zaWduZXIEZW1pdBFwZXJtaXNzaW9uX2RlbmllZAxvdXRfb2ZfcmFuZ2UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIBQAAAAAAAAADCAYAAAAAAAAAAwgEAAAAAAAAAAMIAwAAAAAAAAADCAIAAAAAAAAAAwgBAAAAAAAAAAMICAAAAAAAAAADCAcAAAAAAAAAAwgJAAAAAAAAAAIBCAIB/AIB/QIB/hNpbml0aWE6Om1ldGFkYXRhX3Yw9gUJAQAAAAAAAAAORU9CSkVDVF9FWElTVFMoQW4gb2JqZWN0IGFscmVhZHkgZXhpc3RzIGF0IHRoaXMgYWRkcmVzcwIAAAAAAAAAFkVPQkpFQ1RfRE9FU19OT1RfRVhJU1QoQW4gb2JqZWN0IGRvZXMgbm90IGV4aXN0IGF0IHRoaXMgYWRkcmVzcwMAAAAAAAAAFUVOT19VTkdBVEVEX1RSQU5TRkVSUzJUaGUgb2JqZWN0IGRvZXMgbm90IGhhdmUgdW5nYXRlZCB0cmFuc2ZlcnMgZW5hYmxlZAQAAAAAAAAAEUVOT1RfT0JKRUNUX09XTkVSLlRoZSBjYWxsZXIgZG9lcyBub3QgaGF2ZSBvd25lcnNoaXAgcGVybWlzc2lvbnMFAAAAAAAAAA5FQ0FOTk9UX0RFTEVURSZUaGUgb2JqZWN0IGRvZXMgbm90IGFsbG93IGZvciBkZWxldGlvbgYAAAAAAAAAEEVNQVhJTVVNX05FU1RJTkcvRXhjZWVkcyBtYXhpbXVtIG5lc3RpbmcgZm9yIGFuIG9iamVjdCB0cmFuc2Zlci4HAAAAAAAAABhFUkVTT1VSQ0VfRE9FU19OT1RfRVhJU1Q0VGhlIHJlc291cmNlIGlzIG5vdCBzdG9yZWQgYXQgdGhlIHNwZWNpZmllZCBhZGRyZXNzLggAAAAAAAAAEUVPQkpFQ1RfTk9UX0JVUk5UKkNhbm5vdCByZWNsYWltIG9iamVjdHMgdGhhdCB3ZXJlbid0IGJ1cm50LgkAAAAAAAAAEUVWRVJTSU9OX01JU01BVENIO1RoZSB2ZXJzaW9uIG9mIHJlZiBkb2VzIG5vdCBtYXRjaCB3aXRoIG9iamVjdCBjb3JlIHZlcnNpb24uAgtDcmVhdGVFdmVudAEEAA1UcmFu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Cw4CCQAJAQMHCw4CCQAJAQkACQECBwsOAgkACQEJAAEHCQEBCAICDAsDAQgEAQwBCA0BBggKAgsDAQkACAoBBggLAwYICwsDAQkACAoBBggMAwYIDAsDAQkAAwMGCAsLAwEJAAECCwMBCAcLAwEIBwQGDAsDAQkACwMBCQADBAYICwsDAQkACwMBCQADAwYICwsDAQkAAxZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlB2FjY291bnQFZXZlbnQOZnVuZ2libGVfYXNzZXQGb2JqZWN0Bm9wdGlvbgZzaWduZXIGc3RyaW5nBXRhYmxlDERlcml2ZVJlZlBvZAtNb2R1bGVTdG9yZRhQcmltYXJ5U3RvcmVDcmVhdGVkRXZlbnQGT2JqZWN0B2JhbGFuY2UITWV0YWRhdGEGT3B0aW9uCGJhbGFuY2VzB0J1cm5SZWYEYnVybg1GdW5naWJsZVN0b3JlFGNyZWF0ZV9wcmltYXJ5X3N0b3JlDkNvbnN0cnVjdG9yUmVmBlN0cmluZytjcmVhdGVfcHJpbWFyeV9zdG9yZV9lbmFibGVkX2Z1bmdpYmxlX2Fzc2V0DUZ1bmdpYmxlQXNzZXQHZGVwb3NpdAtUcmFuc2ZlclJlZhBkZXBvc2l0X3dpdGhfcmVmG2Vuc3VyZV9wcmltYXJ5X3N0b3JlX2V4aXN0cwtpbml0X21vZHVsZQlpc19mcm96ZW4GaXNzdWVyB01pbnRSZWYEbWludA1wcmltYXJ5X3N0b3JlFXByaW1hcnlfc3RvcmVfYWRkcmVzcxRwcmltYXJ5X3N0b3JlX2V4aXN0cw9zZXRfZnJvemVuX2ZsYWcIdHJhbnNmZXIRdHJhbnNmZXJfd2l0aF9yZWYId2l0aGRyYXcRd2l0aGRyYXdfd2l0aF9yZWYTbWV0YWRhdGFfZGVyaXZlX3JlZglEZXJpdmVSZWYHaXNzdWVycwVUYWJsZQt1c2VyX3N0b3Jlcwpvd25lcl9hZGRyCnN0b3JlX2FkZHINbWV0YWRhdGFfYWRkcglUYWJsZUl0ZXIGYm9ycm93BG5vbmUEaXRlcgdwcmVwYXJlBG5leHQRYWRkcmVzc190b19vYmplY3QRYnVybl9yZWZfbWV0YWRhdGEJYnVybl9mcm9tDm9iamVjdF9hZGRyZXNzGmNyZWF0ZV91c2VyX2Rlcml2ZWRfb2JqZWN0FWdlbmVyYXRlX3RyYW5zZmVyX3JlZhhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIMY3JlYXRlX3N0b3JlCGNvbnRhaW5zA25ldwNhZGQKYm9ycm93X211dBxhZGRyZXNzX2Zyb21fY29uc3RydWN0b3JfcmVmBGVtaXQPYWRkX2Z1bmdpYmlsaXR5G29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZg9nZW5lcmF0ZV9zaWduZXITZ2VuZXJhdGVfZGVyaXZlX3JlZgVvd25lcg5hc3NldF9tZXRhZGF0YQlleGlzdHNfYXQOY3JlYXRlX2FjY291bnQVdHJhbnNmZXJfcmVmX21ldGFkYXRhEW1pbnRfcmVmX21ldGFkYXRhB21pbnRfdG8iY3JlYXRlX3VzZXJfZGVyaXZlZF9vYmplY3RfYWRkcmVzcwxzdG9yZV9leGlzdHMKYWRkcmVzc19vZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQoDAQATaW5pdGlhOjptZXRhZGF0YV92MI8BAAEYUHJpbWFyeVN0b3JlQ3JlYXRlZEV2ZW50AQQABwZpc3N1ZXIBAQAHYmFsYW5jZQEBAAhiYWxhbmNlcwEBAAlpc19mcm96ZW4BAQANcHJpbWFyeV9zdG9yZQEBABRwcmltYXJ5X3N0b3JlX2V4aXN0cwEBABVwcmltYXJ5X3N0b3JlX2FkZHJlc3MBAQAAAgEqCA0BAgIsCw4CBQUuCw4CBQsOAgUFAgIDLwUwBTEFAAEAAAEOCgAKATgABAoLAAsBOAE4AgwCBQwGAAAAAAAAAAAMAgsCAgEBAAEBFzEHACsBEAALADgDOAQLATECOAUMBUAfAAAAAAAAAAAMBwcBDAQNBTgGBBkFEg4EQQEKAjQjDAMFGwkMAwsDBC4NBTgHDAk4CAwGCwkUOAkMCA0HCwZEHw0ECwg4AkQBBQ4LBwsEAgIBAAAGCgsBCgARGzgKDAMLAAsDCwI4CwIDAQACAAElOwoBOAwMBgoGOAgBCgYrABABDAUKAAsFCREeDAIOAgwECgQRHwwDDgMRIAoECwE4DQwIBwAqAQwHCgcQAAoAOA4gBCgKBw8ACgA4DzgQCwcPAAoAOBEMCgsEESYMCQsKCgYKCTgSCwALCQsGEgI4EwsIAgQBAAEBMR0KAAsBCwILAwsECwULBhEoAQoAOBQMCAoAESoMBw4HCwARKxIALQAHACoBDwIKCDgVCwg4FjgSAgUBAAIAAR8QDgERLQwCCgALAjgXCwE4GAoAES8gBA8LABEwAQIGAQACAAEGCgsBCgARMTgXDAMLAAsDCwI4GQIHAQACAAEGEAoACgE4ACAECgsACwE4GgwCBQ4LAAsBOAEMAgsCAggAAAAFBgsAOA84GxIBLQECCQEAAAsOCgAKATgABAoLAAsBOAE4HAwCBQwJDAILAgIKAQABAQUIBwArARACCwA4DDgdFAILAQACAAEGCgsBCgARNDgXDAMLAAsDCwI4HgIMAQAABQULAAsBOB84CQINAQAADQcLATgMDAILAAsCETYCDgEAAAUFCwALATgfETcCDwEAAgABBgoLAQoAETE4FwwDCwALAwsCOCACEAEEAgABOw8KABE5CgE4IQwFCwILATghDAQLAAsFCwQLAzgiAhEBAAIAATsQCwEKABExOAoMBAsCCgARMTgXDAULAAsECwULAzgjAhIBAAAGCgoAETkLATgBDAMLAAsDCwI4JAITAQAABgoLAQoAETE4CgwDCwALAwsCOCUCAQEAAAEAAA==",
        "oRzrCwYAAAAMAQAUAhQeAzKRAgTDAiwF7wLqAgfZBa8ECIgKIAaoCuUBEI0MyQQK1hAYDO4Q2hQNyCUIAAAAAQACAAMABAAFAAYABwAIAAkACgYAAAsKAAAMBgAHDQcABBEHAQABBicHAgAAAAAADgABAAAPAgEBAgAQAwEAABIEBQEIABMGAwAAFAcBAAAVCAkBCAAWCgsAABcEDAEIABgEDQEIABkEBQEIABoEDgEIABsEDwEIABwEEAEIAB0EEQEIAB4EEgEIAB8EEwEIACAECQEIACEEFAEIACIVAQAAIxYBAAAkFwEBAgcqDg8AAisJCQADLA4FAAMtDhQAAy4OEQADLw4TAAMwDgkAAzEOEAADMg4SAAMzDg0AAzQODwACNQkJAAYOGgECBAQINgEPAQABNx0OAQAEOAgNAQgGEh4FAgQEBTkGDQAGFR8JAgQEBjoBIQIEBAk7IgUBAAcVIwkABjweJQIEBAM3Dg4ABiImJwIEBAY9JikCBAQiGSMcJBwlHCYZKBkpGSoPLBkIHCMNIwUjDiMPIxAjESMSIxMjCSMULhkvGQQGCAAIAwgDCgIAAwYIAAgDCQABCAACCwQBCQAGCAMBAQEGDAIGDAgBAQsEAQkAAQMDCggDCggDCgoCAQgBAggDCgIBBQEKAgEIAwEEAQ0BDwEOAQICBggABggDBAYIAAYIAwgDCgIDBggABggDCQARAgICAgICAgICCAMCBggACAMCAgoCCgICCAMIAgMHCwUCCQAJAQkACQEPAgICAgICAgICCAMGCAACCAMCCgIBCQABBgkAAgYLBQIJAAkBBgkAAQYLBQIJAAkBFQIKAgIIAwcLBQIIAwgCAgICAgICAgILBQIIAwgCCAMDAggDAgoCCgIBCwUCCQAJAQEGCgkAAQYIAwsIAwgDCAMIAwgDCAMIAwgDCAMGCAICAQYJAQIHCwUCCQAJAQYJAAIJAAkBEgICAgICAgICAgYIAwIHCAIGCAAIAwICCgIKAgEHCQEQAgICAgICAgICBggDBwgCBggAAggDAgoCDHByb3BlcnR5X21hcANiY3MFZXJyb3IIZnJvbV9iY3MGb2JqZWN0BnNpZ25lcgpzaW1wbGVfbWFwBnN0cmluZwl0eXBlX2luZm8GdmVjdG9yCk11dGF0b3JSZWYLUHJvcGVydHlNYXANUHJvcGVydHlWYWx1ZQZTdHJpbmcDYWRkCWFkZF90eXBlZARidXJuBk9iamVjdAxjb250YWluc19rZXkUZ2VuZXJhdGVfbXV0YXRvcl9yZWYEaW5pdAZsZW5ndGgNcHJlcGFyZV9pbnB1dARyZWFkDHJlYWRfYWRkcmVzcwlyZWFkX2Jvb2wKcmVhZF9ieXRlcwtyZWFkX3N0cmluZwlyZWFkX3UxMjgIcmVhZF91MTYJcmVhZF91MjU2CHJlYWRfdTMyCHJlYWRfdTY0B3JlYWRfdTgGcmVtb3ZlBnVwZGF0ZQx1cGRhdGVfdHlwZWQEc2VsZgVpbm5lcglTaW1wbGVNYXAEdHlwZQV2YWx1ZQR1dGY4EGludmFsaWRfYXJndW1lbnQHdG9fYm9vbAV0b191OAZ0b191MTYGdG9fdTMyBnRvX3U2NAd0b191MTI4B3RvX3UyNTYKdG9fYWRkcmVzcwl0b19zdHJpbmcJbm90X2ZvdW5kCXR5cGVfbmFtZQh0b19ieXRlcw5vYmplY3RfYWRkcmVzcwphZGRyZXNzX29mBmNyZWF0ZQhpc19lbXB0eQZib3Jyb3cKYm9ycm93X211dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAgEHAgEAAgEIAwgCAAAAAAAAAAMIBQAAAAAAAAADCAQAAAAAAAAAAwgBAAAAAAAAAAMICAAAAAAAAAADCAMAAAAAAAAAAwgHAAAAAAAAAAMIBgAAAAAAAAADCOgDAAAAAAAAAwiAAAAAAAAAAAIBCQIBBQIBAgIBBgIBAwIBBAIBAQoCBQRib29sCgIDAnU4CgIEA3UxNgoCBAN1MzIKAgQDdTY0CgIFBHUxMjgKAgUEdTI1NgoCCAdhZGRyZXNzCgILCnZlY3Rvcjx1OD4KAhQTMHgxOjpzdHJpbmc6OlN0cmluZxNpbml0aWE6Om1ldGFkYXRhX3YwswQIAQAAAAAAAAAcRVBST1BFUlRZX01BUF9ET0VTX05PVF9FWElTVB9UaGUgcHJvcGVydHkgbWFwIGRvZXMgbm90IGV4aXN0AgAAAAAAAAAjRUtFWV9BTFJFQURZX0VYSVNUU19JTl9QUk9QRVJUWV9NQVAfVGhlIHByb3BlcnR5IGtleSBhbHJlYWR5IGV4aXN0cwMAAAAAAAAAFEVUT09fTUFOWV9QUk9Q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BwYIAwkACnNpbXBsZV9uZnQKY29sbGVjdGlvbgpkZWNpbWFsMTI4BWVycm9yCmluaXRpYV9uZnQDbmZ0Bm9iamVjdAZvcHRpb24McHJvcGVydHlfbWFwB3JveWFsdHkGc2lnbmVyBnN0cmluZwlTaW1wbGVOZnQTU2ltcGxlTmZ0Q29sbGVjdGlvbgZPYmplY3QGU3RyaW5nDGFkZF9wcm9wZXJ0eRJhZGRfdHlwZWRfcHJvcGVydHkWYXJlX3Byb3BlcnRpZXNfbXV0YWJsZQRidXJuBk9wdGlvbgpEZWNpbWFsMTI4EWNyZWF0ZV9jb2xsZWN0aW9uGGNyZWF0ZV9jb2xsZWN0aW9uX29iamVjdCFpc19tdXRhYmxlX2NvbGxlY3Rpb25fZGVzY3JpcHRpb24laXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF9kZXNjcmlwdGlvbiRpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3Byb3BlcnRpZXMdaXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF91cmkdaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3JveWFsdHkZaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3VyaQRtaW50D21pbnRfbmZ0X29iamVjdA9yZW1vdmVfcHJvcGVydHkac2V0X2NvbGxlY3Rpb25fZGVzY3JpcHRpb24HUm95YWx0eRhzZXRfY29sbGVjdGlvbl9yb3lhbHRpZXMdc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzX2NhbGwSc2V0X2NvbGxlY3Rpb25fdXJpD3NldF9kZXNjcmlwdGlvbgdzZXRfdXJpD3VwZGF0ZV9wcm9wZXJ0eRV1cGRhdGVfdHlwZWRfcHJvcGVydHkUcHJvcGVydHlfbXV0YXRvcl9yZWYKTXV0YXRvclJlZhZtdXRhYmxlX25mdF9wcm9wZXJ0aWVzDm9iamVjdF9hZGRyZXNzCW5vdF9mb3VuZAdjcmVhdG9yCmFkZHJlc3Nfb2YRcGVybWlzc2lvbl9kZW5pZWQDYWRkCWFkZF90eXBlZApDb2xsZWN0aW9uEWNvbGxlY3Rpb25fb2JqZWN0BG93bnMJRXh0ZW5kUmVmE0luaXRpYU5mdENvbGxlY3Rpb24dZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRp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CAEICQMKCAMKCAMKCgIBCA4CBgwIDgIIBQgPAQgPAQYIDwEIEAIIEAUBCAACBggJBggDBAsCAQkABQYMBggBAQYJAAIGCAoIAwIGCAsIBgMGDAsCAQkABQIGCAgIAwQGCAkGCAMIAwoCAwYICQYIAwkAEHNvdWxfYm91bmRfdG9rZW4KY29sbGVjdGlvbgpkZWNpbWFsMTI4BWVycm9yA25mdAZvYmplY3QGb3B0aW9uDHByb3BlcnR5X21hcAdyb3lhbHR5BnNpZ25lcgZzdHJpbmcOU291bEJvdW5kVG9rZW4YU291bEJvdW5kVG9rZW5Db2xsZWN0aW9uBk9iamVjdAZTdHJpbmcMYWRkX3Byb3BlcnR5EmFkZF90eXBlZF9wcm9wZXJ0eRZhcmVfcHJvcGVydGllc19tdXRhYmxlCkRlY2ltYWwxMjgRY3JlYXRlX2NvbGxlY3Rpb24YY3JlYXRlX2NvbGxlY3Rpb25fb2JqZWN0IWlzX211dGFibGVfY29sbGVjdGlvbl9kZXNjcmlwdGlvbiVpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X2Rlc2NyaXB0aW9uHmlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfbmFtZSRpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3Byb3BlcnRpZXMdaXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF91cmkdaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3JveWFsdHkZaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3VyaRZpc19tdXRhYmxlX2Rlc2NyaXB0aW9uD2lzX211dGFibGVfbmFtZQ5pc19tdXRhYmxlX3VyaQRtaW50DkNvbnN0cnVjdG9yUmVmDW1pbnRfaW50ZXJuYWwcbWludF9zb3VsX2JvdW5kX3Rva2VuX29iamVjdA9yZW1vdmVfcHJvcGVydHkac2V0X2NvbGxlY3Rpb25fZGVzY3JpcHRpb24HUm95YWx0eRhzZXRfY29sbGVjdGlvbl9yb3lhbHRpZXMdc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzX2NhbGwSc2V0X2NvbGxlY3Rpb25fdXJpD3NldF9kZXNjcmlwdGlvbgdzZXRfdXJpD3VwZGF0ZV9wcm9wZXJ0eRV1cGRhdGVfdHlwZWRfcHJvcGVydHkLbXV0YXRvcl9yZWYGT3B0aW9uCk11dGF0b3JSZWYUcHJvcGVydHlfbXV0YXRvcl9yZWYTcm95YWx0eV9tdXRhdG9yX3JlZhNtdXRhYmxlX2Rlc2NyaXB0aW9uC211dGFibGVfdXJpF211dGFibGVfbmZ0X2Rlc2NyaXB0aW9uEG11dGFibGVfbmZ0X25hbWUWbXV0YWJsZV9uZnRfcHJvcGVydGllcw9tdXRhYmxlX25mdF91cmkOb2JqZWN0X2FkZHJlc3MJbm90X2ZvdW5kB2NyZWF0b3IKYWRkcmVzc19vZhFwZXJtaXNzaW9uX2RlbmllZANhZGQJYWRkX3R5cGVkCkNvbGxlY3Rpb24RY29sbGVjdGlvbl9vYmplY3QGY3JlYXRlBHNvbWUXY3JlYXRlX2ZpeGVkX2NvbGxlY3Rpb24PZ2VuZXJhdGVfc2lnbmVyFGdlbmVyYXRlX211dGF0b3JfcmVmBG5vbmUJRXh0ZW5kUmVmE2dlbmVyYXRlX2V4dGVuZF9yZWYbb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmB2lzX3NvbWULUHJvcGVydHlNYXAZY3JlYXRlX2NvbGxlY3Rpb25fYWRkcmVzcxFhZGRyZXNzX3RvX29iamVjdA1wcmVwYXJlX2lucHV0BGluaXQLVHJhbnNmZXJSZWYVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmEUxpbmVhclRyYW5zZmVyUmVmHGdlbmVyYXRlX2xpbmVhcl90cmFuc2Zlcl9yZWYRdHJhbnNmZXJfd2l0aF9yZWYYZGlzYWJsZV91bmdhdGVkX3RyYW5zZmVyBnJlbW92ZQZib3Jyb3cGdXBkYXRlDHVwZGF0ZV90eXBlZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgBAAAAAAAAAAMIBAAAAAAAAAADCAIAAAAAAAAAAwgDAAAAAAAAAAMIBQAAAAAAAAATaW5pdGlhOjptZXRhZGF0YV92MJwDBQEAAAAAAAAAGkVDT0xMRUNUSU9OX0RPRVNfTk9UX0VYSVNUHVRoZSBjb2xsZWN0aW9uIGRvZXMgbm90IGV4aXN0AgAAAAAAAAATRU5GVF9ET0VTX05PVF9FWElTVBZUaGUgbmZ0IGRvZXMgbm90IGV4aXN0AwAAAAAAAAAM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",
        "",
        "",
        "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",
        "",
        "oRzrCwYAAAANAQAQAhAYAyiFAQStAQgFtQF+B7MC7AUInwggBr8IaxCqCYkDCrMMKAzbDIMEDd4QCA/mEAIAAQACAAMABAAFAAYABwAIAAkIAAAKAgAACwYAAg0HAAUoAgAFKQYAAAwAAQAADgIBAAAPAwQAABADBQAAEQMGAAASAwcAABMDBAAAFAMIAAAVCQEAABYKAQAAFwsBAAYfAAQAAyAMDAACIQEGAAIiAg0AAyMMDAAFJA4EAAElEAUBAAcmEQEBAAMnDAwAAyoMDAAFKxQVAAUsFhcABS0YAQAFLhYZAAQvHAEBBhEEEg8RDBkbAQYMAAEGCAMCBQMBBQEKAgEIAwEIAQEBAwYIAwYIAwYIAwcGDAUDAwgDCAMIAwQGDAMDCAMBAwEPAgUKAgECAQYJAAIHCgkACgkAAQYIAAUIBAwIAAoCCAUDBgwKAgEBCAQBBggEAQgFAQYIBQEMBg8PDw8FBwgAAQgCAQkAA3ZpcAx2aXBfb3BlcmF0b3IDYmNzCmRlY2ltYWwyNTYFZXJyb3IFZXZlbnQGb2JqZWN0BnNpZ25lcgZ2ZWN0b3INT3BlcmF0b3JTdG9yZRVPcGVyYXRvclN0b3JlUmVzcG9uc2UVVXBkYXRlQ29tbWlzc2lvbkV2ZW50FmNoZWNrX2NoYWluX3Blcm1pc3Npb24KRGVjaW1hbDI1NhBjaGVja192YWxpZF9yYXRlHWNyZWF0ZV9vcGVyYXRvcl9zdG9yZV9hZGRyZXNzHGdlbmVyYXRlX29wZXJhdG9yX3N0b3JlX3NlZWQXZ2V0X29wZXJhdG9yX2NvbW1pc3Npb24SZ2V0X29wZXJhdG9yX3N0b3JlGmdldF9vcGVyYXRvcl9zdG9yZV9hZGRyZXNzHGlzX29wZXJhdG9yX3N0b3JlX3JlZ2lzdGVyZWQZaXNfdmFsaWRfY29tbWlzc2lvbl9yYXRlcxdyZWdpc3Rlcl9vcGVyYXRvcl9zdG9yZRp1cGRhdGVfb3BlcmF0b3JfY29tbWlzc2lvbhJsYXN0X2NoYW5nZWRfc3RhZ2UTY29tbWlzc2lvbl9tYXhfcmF0ZRpjb21taXNzaW9uX21heF9jaGFuZ2VfcmF0ZQ9jb21taXNzaW9uX3JhdGUIb3BlcmF0b3IJYnJpZGdlX2lkBXN0YWdlCmFkZHJlc3Nfb2YRcGVybWlzc2lvbl9kZW5pZWQDb25lA3ZhbBBpbnZhbGlkX2FyZ3VtZW50FWNyZWF0ZV9vYmplY3RfYWRkcmVzcwh0b19ieXRlcwZhcHBlbmQJbm90X2ZvdW5kDkNvbnN0cnVjdG9yUmVmC1RyYW5zZmVyUmVmDmFscmVhZHlfZXhpc3RzE2NyZWF0ZV9uYW1lZF9vYmplY3QVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmGGRpc2FibGVfdW5nYXRlZF90cmFuc2Zlcg9nZW5lcmF0ZV9zaWduZXIEZW1pdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAwgDAAAAAAAAAAMIBgAAAAAAAAADCAUAAAAAAAAAAwgBAAAAAAAAAAMIAgAAAAAAAAADCAQAAAAAAAAAAwgHAAAAAAAAAAIB9gUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAETaW5pdGlhOjptZXRhZGF0YV92MPMCBwEAAAAAAAAAHkVPUEVSQVRPUl9TVE9SRV9BTFJFQURZX0VYSVNUUwACAAAAAAAAABlFT1BFUkFUT1JfU1RPUkVfTk9UX0ZPVU5EAAMAAAAAAAAAH0VJTlZBTElEX0NPTU1JU1NJT05fQ0hBTkdFX1JBVEUABAAAAAAAAAAZRU9WRVJfTUFYX0NPTU1JU1NJT05fUkFURQAFAAAAAAAAAA5FSU5WQUxJRF9TVEFHRQAGAAAAAAAAABhFSU5WQUxJRF9DT01NSVNTSU9OX1JBVEUABwAAAAAAAAANRVVOQVVUSE9SSVpFRAABFVVwZGF0ZUNvbW1pc3Npb25FdmVudAEEAAQSZ2V0X29wZXJhdG9yX3N0b3JlAQEAF2dldF9vcGVyYXRvcl9jb21taXNzaW9uAQEAGmdldF9vcGVyYXRvcl9zdG9yZV9hZGRyZXNzAQEAHGlzX29wZXJhdG9yX3N0b3JlX3JlZ2lzdGVyZWQBAQAAAgQYAxkIAxoIAxsIAwECBBgDGQgDGggDGwgDAgIEHAUdAx4DGwgDAAAAAAEKCwARCwcIIQQGBQkHBhEMJwIBAAAABg0RDQwBCwARDg4BEQ4lBAkFDAcBEQ8nAgIAAAAFCAsACwERAwwCBwgLAhEQAgMAAAAFDQcHQA8BAAAAAAAAAAwCDQIOADgAOAENAg4BOAI4AQsCAgQBAAEAAQcLAAsBEQYrABAAFAIFAQABABITCwALAREGKwAMAgoCEAEUCgIQAhQKAhADFAsCEAAUEgECBgEAAAQNCwALARECDAIKAikABAgFCwcEERMnCwICBwEAAAEFCwALARECKQACCAAAAAERCgARAQsBEQEKAhEBCwIRDgsAEQ4lBA0FEAcFEQ8nAgkDAAATLgoAEQALAQsCEQMMCgoAEQsKChEQKQAgBA4FEwsAAQcDERQnDgQOBQ4GEQgLAAsKCREVDAcOBxEWDAsOCxEXDgcRGAwICwMLBAsFCwYSAAwJDggLCS0AAgoDAAEAGlsLABELDAgKCAoBEQYqAAwJCgIKCRABFCQEDwUUCwkBBwIRDycKCRAAEQ4MBw4DEQ4MBgoJEAMRDgwECgkQAhEODAUKBgsFJQQoBS0LCQEHBREPJwoHCgYkBD4LBwsGFwsEJQQ4BT0LCQEHABEPJwVKCwYLBxcLBCUERQVKCwkBBwARDycKAwoJDwAVCwIKCQ8BFQsICwELCRABFAsDEgI4AwIAAwAAAAEAAgAAAA==",
        "oRzrCwYAAAANAQAaAhoqA0SnAQTrARYFgQLEAQfFA/oFCL8JIAbfCWoQyQq5AQqCDBMMlQzYAg3tDgYP8w4IAAQABQAGAAcACAAJAAoACwAMAA0ADgAPABAAEQgABRoHAQABBBsIAAQdAAAFIAYABCIIAAkkBAIDAQABCCgHAAUvAgAAEgABAAATAgMAABQDAgEHABUDBAEHABYDAgEHABcFAwAAGAMGAQcAGQcBAQcAHAEIAAAeBQkACiUDBAAJJgwNAgMCBhMPAwEIBScRAgALKQETAQAIKgQTAAErFQQBAAwsFgEBAAMtAwMACS4YGQIDAAcwGwIAAzEDAwAFMhwdAAUzHh8ABTQeIAAGNQ8hAQgJNgEiAgMEAjcjCAAFOCUfAAQeJwkBCAsLDA4DEA4QEAMRFAIQEwsZDhoLHSYDBQMDAAEFAQMBCgICBQMBAQIGDAMBCwEBCAIBCAMBBwMCCgIDAwcLBgIJAAkBCQAJAQEHCQEBCAICBQsBAQkAAQkAAgUKAgIKAgoCAQgHAQIBBgkAAgcKCQAKCQADAwoCBgsGAgoCAwMGCwYCCQAJAQkABgkBAQYJAQYICAgEDAsBAQgFBQoCAQYMAwYMCgIBAQgIAQYICAEMAQgEAQsBAQgFAQsGAgkACQECBQgHAgwGCAABBggEAQgFAwYMCwEBCQADA3ZpcAl2aXBfdmF1bHQLdmlwX3Zlc3RpbmcLdmlwX3phcHBpbmcKdmlwX3Jld2FyZANiY3MEY29pbgVlcnJvcg5mdW5naWJsZV9hc3NldAZvYmplY3QWcHJpbWFyeV9mdW5naWJsZV9zdG9yZQZzaWduZXIGc3RyaW5nBXRhYmxlCXRhYmxlX2tleQl0eXBlX2luZm8GdmVjdG9yC1Jld2FyZFN0b3JlFGFkZF9yZXdhcmRfcGVyX3N0YWdlB2JhbGFuY2UbY3JlYXRlX3Jld2FyZF9zdG9yZV9hZGRyZXNzGmdlbmVyYXRlX3Jld2FyZF9zdG9yZV9zZWVkGGdldF9yZXdhcmRfc3RvcmVfYWRkcmVzcxBnZXRfc3RhZ2VfcmV3YXJkGmlzX3Jld2FyZF9zdG9yZV9yZWdpc3RlcmVkFXJlZ2lzdGVyX3Jld2FyZF9zdG9yZQZPYmplY3QITWV0YWRhdGEPcmV3YXJkX21ldGFkYXRhDUZ1bmdpYmxlQXNzZXQId2l0aGRyYXcKZXh0ZW5kX3JlZglFeHRlbmRSZWYMcmV3YXJkX3N0b3JlDUZ1bmdpYmxlU3RvcmUQcmV3YXJkX3Blcl9zdGFnZQVUYWJsZQplbmNvZGVfdTY0F2JvcnJvd19tdXRfd2l0aF9kZWZhdWx0FWNyZWF0ZV9vYmplY3RfYWRkcmVzcwZTdHJpbmcJdHlwZV9uYW1lBHV0ZjgIdG9fYnl0ZXMGYXBwZW5kCW5vdF9mb3VuZBNib3Jyb3dfd2l0aF9kZWZhdWx0DkNvbnN0cnVjdG9yUmVmCmFkZHJlc3Nfb2YOYWxyZWFkeV9leGlzdHMTY3JlYXRlX25hbWVkX29iamVjdA9nZW5lcmF0ZV9zaWduZXITZ2VuZXJhdGVfZXh0ZW5kX3JlZhtlbnN1cmVfcHJpbWFyeV9zdG9yZV9leGlzdHMDbmV3CG1ldGFkYXRhHWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAEAAAAAAAAAAwgCAAAAAAAAAAIB8goCBgV1aW5pdAIB8wUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKAiIhMHgxOjp2aXBfdmVzdGluZzo6T3BlcmF0b3JWZXN0aW5nE2luaXRpYTo6bWV0YWRhdGFfdjCjAQIBAAAAAAAAABxFUkVXQVJEX1NUT1JFX0FMUkVBRFlfRVhJU1RTAAIAAAAAAAAAF0VSRVdBUkRfU1RPUkVfTk9UX0ZPVU5EAAAEB2JhbGFuY2UBAQAQZ2V0X3N0YWdlX3Jld2FyZAEBABhnZXRfcmV3YXJkX3N0b3JlX2FkZHJlc3MBAQAaaXNfcmV3YXJkX3N0b3JlX3JlZ2lzdGVyZWQBAQAAAgMfCAQhCwEBCAUjCwYCCgIDAAMAAQAKDwsAKgAPAAsBEQoGAAAAAAAAAAA4AAwDCgMUCwIWCwMVAgEBAAABBAsAEQg4AQICAAAABAcLADgCDAEHBQsBEQ0CAwAAABIUOAMHBhEPIQQJBwJAFAEAAAAAAAAADAEFDAcEQBQBAAAAAAAAAAwBCwEMAg0CDgA4BDgFCwICBAEAAAIMCwA4BgwBCgEpAAQHBQoHARESJwsBAgUBAAEAFw8LACsAEAAMBAsBEQoMAwYAAAAAAAAAAAwCCwQLAw4COAcUAgYBAAABBAsAOAYpAAIHAwAAGigLATgCDAcKABEUCgcRDQwGCgYpACAEDQUSCwABBwARFScLAAsHCREWDAIOAhEXDAQOAhEYDAMLBhEIOAgMBQ4ECwMLBTgJEgAtAAIIAQAAAQUHBQcDEQ8RGwIJAwABACQOCwArAAwDCgMQAREcDAIOAgsDEAIUCwE4CgIAAgAAAAEAAAABAAIAAwA=",
        "oRzrCwYAAAANAQAOAg4eAyxyBJ4BCAWmAXAHlgK6BAjQBiAG8AZWEMYHowEK6QgMDPUI4QIN1gsID94LAgABAAIAAwAEAAUABgAHAAgIAAILAAADFAYAAxcHAQABAhgIAAIcCAADIwIAAAkAAQAACgIAAAAMAQMAAA0EAAAADgAFAAAPAAYAABACAAAAEQABAAASBAAABhkABwAECQkBAQgFGgIGAAEbAQEAAR0BAQABHgEBAAMfCwwABCAJDQEIAiEPAwEIBCIQAAEIAyQTBgADJRQVAAMmFhcACggQCBEOEggAAQMBBgwBCAECBgwDAQoCAQUBCwMBCAQBCAQCBQsDAQkAAwcIAAwLAwEIBQEGCAIBDAELAwEIBQEIBQMGDAsDAQkAAwQGDAsDAQkABQMBAgQIBggCCgIFAgUKAgMGDAoCAQEIBgEGCAYBCAIBBwgAA3ZpcAl2aXBfdmF1bHQFZXJyb3IOZnVuZ2libGVfYXNzZXQGb2JqZWN0FnByaW1hcnlfZnVuZ2libGVfc3RvcmUGc2lnbmVyCnZpcF9yZXdhcmQLTW9kdWxlU3RvcmUHYmFsYW5jZRZjaGVja19jaGFpbl9wZXJtaXNzaW9uDUZ1bmdpYmxlQXNzZXQFY2xhaW0HZGVwb3NpdBlnZW5lcmF0ZV92YXVsdF9zdG9yZV9zZWVkF2dldF92YXVsdF9zdG9yZV9hZGRyZXNzC2luaXRfbW9kdWxlEHJld2FyZF9wZXJfc3RhZ2UXdXBkYXRlX3Jld2FyZF9wZXJfc3RhZ2UKZXh0ZW5kX3JlZglFeHRlbmRSZWYPY2xhaW1hYmxlX3N0YWdlEHZhdWx0X3N0b3JlX2FkZHIGT2JqZWN0CE1ldGFkYXRhD3Jld2FyZF9tZXRhZGF0YQphZGRyZXNzX29mEXBlcm1pc3Npb25fZGVuaWVkDUZ1bmdpYmxlU3RvcmUQaW52YWxpZF9hcmd1bWVudA1pbnZhbGlkX3N0YXRlHWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nG2Vuc3VyZV9wcmltYXJ5X3N0b3JlX2V4aXN0cwh3aXRoZHJhdwh0cmFuc2Zlcg5Db25zdHJ1Y3RvclJlZhVjcmVhdGVfb2JqZWN0X2FkZHJlc3MTY3JlYXRlX25hbWVkX29iamVjdBNnZW5lcmF0ZV9leHRlbmRfcmVmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCAEAAAAAAAAAAwgEAAAAAAAAAAMIAgAAAAAAAAADCAMAAAAAAAAACgIGBXVpbml0AgHxBSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARNpbml0aWE6Om1ldGFkYXRhX3YwjQEEAQAAAAAAAAAPRUlOVkFMSURfQU1PVU5UAAIAAAAAAAAADkVJTlZBTElEX1NUQUdFAAMAAAAAAAAADUVVTkFVVEhPUklaRUQABAAAAAAAAAAZRUlOVkFMSURfUkVXQVJEX1BFUl9TVEFHRQAAAgdiYWxhbmNlAQEAEHJld2FyZF9wZXJfc3RhZ2UBAQAAAgQTCAIVAxEDFgUAAQABAAAEEQURCTgAAgEAAAAACgsAEQsHBiEEBgUJBwMRDCcCAgMAAQAKMgcGKgAMAQoACgEQABQhBAoFDwsBAQcCEQ0nCgEQARQGAAAAAAAAAAAkBBYFGwsBAQcBEQ4nCwAGAQAAAAAAAAAWCgEPABUKARACEQ8MAgoBEAMUEQk4AQwDDgILAwsBEAEUOAICAwEEAQAGEhEFDAIKAQYAAAAAAAAAACQEBwUMCwABBwARDScLABEJCwILATgDAgQAAAAAAwcFQBEBAAAAAAAAAAIFAwABAAAFBwYrABADFAIGAAAAEhcRBAwDCgARCwoDERMMBAoACwMJERQMAQ4BERUMAgsACwIGAQAAAAAAAAAGAAAAAAAAAAALBBIALQACBwEAAQAABQcGKwAQARQCCAEEAQAYFAsAEQEHBioADAIKAQYAAAAAAAAAACQECgUPCwIBBwERDScLAQsCDwEVAgABAAIAAAADAAAA",
        "",
        "oRzrCwYAAAANAQAeAh5sA4oBtwIEwQMmBecDggQH6QeZDAiCFCAGohR8EJ4VlwMKtRjLAQyAGpMKDZMkGg+tJAIAAQACAAMABAAFAAYABwAIAAkACgALAAwADQAOAA8AEAYAABEGAAASAgAAEwgAABQGAAAVCAAAFgYAABcGAAAYBAAAGQYAABoGAAAbAgAMHwQABiAAAAwkAgANJQcAByYHAQABBicIAAMvCAAIMAcBAAALPgcCAAAAAAdCBgAORQQCAwEAAQdqAgAAHAABAAAdAAEAAB4CAQAAIQMEAAAiBQEAACMFAQAAKAYHAAApCAkAACoKAQAAKwsJAAAsCwwAAC0CAQAALg0LAAAxDgsAADICAQAAMwUBAAA0BQ8AADUQAQAKUQISAARSCwsAAVMBFAAEVAsLAAxVFRYADFYXGAAGVxkaAAdYHBIBCAZZGQsADFoICwAFWx4BAQYEXAsLAAtdISICBAQOXiQlAgMAAl8fAQAMYCgWAAZhKQEACV8fAQAMYissAA5jLQsCAwAOZC4iAgMABGULCwAOZi8BAgMADGcIMgAMaAgLAAtmMwECBAQOaS42AgMAB2s5OgAHbDs8AA5tAT0CAwQMbhIiAAwyAgEAA28/FgALcAFAAgQEDnEkQwIDAAtxREUCBAQEcgsLAAdzHEkCCAgDdEpLABkbHB0eIB8jHCYlIyYjKCMcMCsgHDQsIy8jMyA0IzUgHEY3SBxMAgYMCgMAAQYMAggIAwIIDAgNAgYMAwgDBQgPAwMIDQsQAQgRCxABCBEDAwMIDgEGCA4BCAAFBQMDAwgOAQMBCAsIBgwDCA0IDwMDCxABCBELEAEIEQsGDAMIDQgNCxABCBILEwEDCA8DAwsQAQgRCxABCBEBCAgIBgwDCxABCBELEwEDCA8DCA0IDQQDAwYKAwYDAQUFAwgMCA4IDQMCAwMBBwgMAQgNAQYIDAEIDgEGCA0BCxABCBEBCBEBCxABCQABCAkBCQACBQgNAgMBAgYLFAIJAAkBBgkAAQECAwgIAgcLFgIJAAkBCQABBwkBAQgGBAUIDQgMCA0CBQgMAgcIDQgNCQMDBQgMCA4HCAUDCAgDAggPCA0BCAwBBgsWAgkACQECBgsWAgkACQEJAAMHCxYCCQAJAQkACQEBCAQDCA8DAwEIDwMHCxQCCQAJAQkACQEBCAECCA4GCAUBBgkBAgYIBQYICAIIFwgVAgUBAQgXAQYIFwEIFQELFgIJAAkBBAUIDgMDBAsQAQgSCA0IDQsTAQMBCxQCCQAJAQEHCAUEBQgOBwgDCAgBCQECBwsUAgkACQEGCQACCQAJAQEIBw0BCA0IDQgNCA0LEAEIEQYIBQsQAQgSAwMLEAEIEQMDAggRCBIBCxABCQEBCxABCBICCxABCBELEAEIEQEICgN2aXALdmlwX3phcHBpbmcFYmxvY2sEY29pbgNkZXgFZXJyb3IFZXZlbnQOZnVuZ2libGVfYXNzZXQGb2JqZWN0Bm9wdGlvbhZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlBnNpZ25lcgpzaW1wbGVfbWFwB3N0YWtpbmcGc3RyaW5nBXRhYmxlDkRlbGVnYXRpb25JbmZvDERlcG9zaXRFdmVudA9MU0VudHJ5UmVzcG9uc2UHTFNTdG9yZQlMb2NrRXZlbnQLTW9kdWxlU3RvcmUQUmV3YXJkQ2xhaW1FdmVudA1XaXRoZHJhd0V2ZW50B1phcHBpbmcRWmFwcGluZ0NsYWltRXZlbnQMWmFwcGluZ0V2ZW50D1phcHBpbmdSZXNwb25zZRliYXRjaF9jbGFpbV9yZXdhcmRfc2NyaXB0GmJhdGNoX2NsYWltX3phcHBpbmdfc2NyaXB0FmNoZWNrX2NoYWluX3Blcm1pc3Npb24KRGVsZWdhdGlvbg1GdW5naWJsZUFzc2V0BWNsYWltE2NsYWltX3Jld2FyZF9zY3JpcHQUY2xhaW1femFwcGluZ19zY3JpcHQSRGVsZWdhdGlvblJlc3BvbnNlBlN0cmluZwZPYmplY3QITWV0YWRhdGEXY3JlYXRlX2xvY2tfc3Rha2VfZW50cnkhZGVsZWdhdGlvbl9yZXNfdG9fZGVsZWdhdGlvbl9pbmZvGGRlcG9zaXRfbG9ja19zdGFrZV9lbnRyeRNnZXRfZGVsZWdhdGlvbl9pbmZvC2dldF96YXBwaW5nC2luaXRfbW9kdWxlCmxvY2tfc3Rha2UGQ29uZmlnBk9wdGlvbhJwcm92aWRlX2xvY2tfc3Rha2UIcmVnaXN0ZXIZdXBkYXRlX2xvY2tfcGVyaW9kX3NjcmlwdBB3aXRoZHJhd196YXBwaW5nB3phcHBpbmcJdmFsaWRhdG9yBXNoYXJlEHVuY2xhaW1lZF9yZXdhcmQDemlkBGFkZHIKZGVsZWdhdGlvbgxyZWxlYXNlX3RpbWUHZW50cmllcwlTaW1wbGVNYXANY29pbl9tZXRhZGF0YQtib25kX2Ftb3VudApleHRlbmRfcmVmCUV4dGVuZFJlZgtsb2NrX3BlcmlvZAh6YXBwaW5ncwVUYWJsZQ1yZXdhcmRfYW1vdW50CWJyaWRnZV9pZAZ6YXBwZXIFc3RhZ2UPZXNpbml0X21ldGFkYXRhFHN0YWtlbGlzdGVkX21ldGFkYXRhGGRlbGVnYXRpb25fcmV3YXJkX2Ftb3VudAdhY2NvdW50C2xwX21ldGFkYXRhDnphcHBpbmdfYW1vdW50EnN0YWtlbGlzdGVkX2Ftb3VudAphZGRyZXNzX29mEXBlcm1pc3Npb25fZGVuaWVkDmdldF9ibG9ja19pbmZvC3VuYXZhaWxhYmxlDGNsYWltX3Jld2FyZCdnZXRfZGVsZWdhdGlvbl9yZXNwb25zZV9mcm9tX2RlbGVnYXRpb24OYXNzZXRfbWV0YWRhdGEOb2JqZWN0X2FkZHJlc3MGYW1vdW50LWdldF91bmNsYWltZWRfcmV3YXJkX2Zyb21fZGVsZWdhdGlvbl9yZXNwb25zZQRlbWl0CW5vdF9mb3VuZAxjb250YWluc19rZXkKYm9ycm93X211dAdkZXBvc2l0EmRlcG9zaXRfZGVsZWdhdGlvbgVtZXJnZQhkZWxlZ2F0ZQZsZW5ndGgIY29udGFpbnMOYWxyZWFkeV9leGlzdHMDYWRkJmdldF92YWxpZGF0b3JfZnJvbV9kZWxlZ2F0aW9uX3Jlc3BvbnNlImdldF9zaGFyZV9mcm9tX2RlbGVnYXRpb25fcmVzcG9uc2UGYm9ycm93DkNvbnN0cnVjdG9yUmVmDWNyZWF0ZV9vYmplY3QTZ2VuZXJhdGVfZXh0ZW5kX3JlZgNuZXcVaXNfYWNjb3VudF9yZWdpc3RlcmVkEXByb3ZpZGVfbGlxdWlkaXR5BmNyZWF0ZQZyZW1vdmUQaW52YWxpZF9hcmd1bWVudAdjb252ZXJ0DXBvb2xfbWV0YWRhdGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMIAPHvAAAAAAADCAgAAAAAAAAAAwgBAAAAAAAAAAMIAgAAAAAAAAAD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"
      ],
      "modules": [],
      "resources": [],
      "table_infos": [],
      "table_entries": [],
      "dex_pairs": []
    },
    "mstaking": {
      "params": {
        "unbonding_time": "1814400s",
        "max_validators": 100,
        "max_entries": 7,
        "historical_entries": 10000,
        "bond_denoms": [
          "uinit"
        ],
        "min_voting_power": "1000000",
        "min_commission_rate": "0.000000000000000000"
      },
      "last_validator_powers": [],
      "validators": [],
      "delegations": [],
      "unbonding_delegations": [],
      "redelegations": [],
      "exported": false,
      "next_unbonding_id": "1"
    },
    "nonfungibletokentransfer": {
      "port_id": "nft-transfer",
      "class_traces": [],
      "params": {
        "send_enabled": true,
        "receive_enabled": true
      }
    },
    "ophost": {
      "params": {
        "registration_fee": []
      },
      "bridges": [],
      "next_bridge_id": "1"
    },
    "oracle": {
      "currency_pair_genesis": [
        {
          "currency_pair": {
            "Base": "TIMESTAMP",
            "Quote": "NANOSECOND"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "0"
        },
        {
          "currency_pair": {
            "Base": "BNB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "1"
        },
        {
          "currency_pair": {
            "Base": "BTC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "2"
        },
        {
          "currency_pair": {
            "Base": "DOGE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "3"
        },
        {
          "currency_pair": {
            "Base": "EOS",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "4"
        },
        {
          "currency_pair": {
            "Base": "ICP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "5"
        },
        {
          "currency_pair": {
            "Base": "NTRN",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "6"
        },
        {
          "currency_pair": {
            "Base": "PEPE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "7"
        },
        {
          "currency_pair": {
            "Base": "SHIB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "8"
        },
        {
          "currency_pair": {
            "Base": "PYTH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "9"
        },
        {
          "currency_pair": {
            "Base": "RNDR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "10"
        },
        {
          "currency_pair": {
            "Base": "STRK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "11"
        },
        {
          "currency_pair": {
            "Base": "ALGO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "12"
        },
        {
          "currency_pair": {
            "Base": "BCH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "13"
        },
        {
          "currency_pair": {
            "Base": "DYDX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "14"
        },
        {
          "currency_pair": {
            "Base": "HBAR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "15"
        },
        {
          "currency_pair": {
            "Base": "OP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "16"
        },
        {
          "currency_pair": {
            "Base": "ORDI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "17"
        },
        {
          "currency_pair": {
            "Base": "TRX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "18"
        },
        {
          "currency_pair": {
            "Base": "AAVE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "19"
        },
        {
          "currency_pair": {
            "Base": "BLUR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "20"
        },
        {
          "currency_pair": {
            "Base": "UNI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "21"
        },
        {
          "currency_pair": {
            "Base": "ARKM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "22"
        },
        {
          "currency_pair": {
            "Base": "JUP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "23"
        },
        {
          "currency_pair": {
            "Base": "LDO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "24"
        },
        {
          "currency_pair": {
            "Base": "WLD",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "25"
        },
        {
          "currency_pair": {
            "Base": "DYM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "26"
        },
        {
          "currency_pair": {
            "Base": "COMP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "27"
        },
        {
          "currency_pair": {
            "Base": "DOT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "28"
        },
        {
          "currency_pair": {
            "Base": "ETC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "29"
        },
        {
          "currency_pair": {
            "Base": "LINK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "30"
        },
        {
          "currency_pair": {
            "Base": "USDT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "31"
        },
        {
          "currency_pair": {
            "Base": "AVAX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "32"
        },
        {
          "currency_pair": {
            "Base": "BONK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "33"
        },
        {
          "currency_pair": {
            "Base": "CRV",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "34"
        },
        {
          "currency_pair": {
            "Base": "IMX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "35"
        },
        {
          "currency_pair": {
            "Base": "SEI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "36"
        },
        {
          "currency_pair": {
            "Base": "SUI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "37"
        },
        {
          "currency_pair": {
            "Base": "GRT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "38"
        },
        {
          "currency_pair": {
            "Base": "MATIC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "39"
        },
        {
          "currency_pair": {
            "Base": "FET",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "40"
        },
        {
          "currency_pair": {
            "Base": "LTC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "41"
        },
        {
          "currency_pair": {
            "Base": "APE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "42"
        },
        {
          "currency_pair": {
            "Base": "JTO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "43"
        },
        {
          "currency_pair": {
            "Base": "SNX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "44"
        },
        {
          "currency_pair": {
            "Base": "SOL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "45"
        },
        {
          "currency_pair": {
            "Base": "AEVO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "46"
        },
        {
          "currency_pair": {
            "Base": "AGIX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "47"
        },
        {
          "currency_pair": {
            "Base": "FIL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "48"
        },
        {
          "currency_pair": {
            "Base": "INJ",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "49"
        },
        {
          "currency_pair": {
            "Base": "TIA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "50"
        },
        {
          "currency_pair": {
            "Base": "WOO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "51"
        },
        {
          "currency_pair": {
            "Base": "APT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "52"
        },
        {
          "currency_pair": {
            "Base": "ARB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "53"
        },
        {
          "currency_pair": {
            "Base": "ATOM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "54"
        },
        {
          "currency_pair": {
            "Base": "MKR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "55"
        },
        {
          "currency_pair": {
            "Base": "STX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "56"
        },
        {
          "currency_pair": {
            "Base": "XRP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "57"
        },
        {
          "currency_pair": {
            "Base": "ASTR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "58"
        },
        {
          "currency_pair": {
            "Base": "ETH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "59"
        },
        {
          "currency_pair": {
            "Base": "MANA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "60"
        },
        {
          "currency_pair": {
            "Base": "AXL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "61"
        },
        {
          "currency_pair": {
            "Base": "NEAR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "62"
        },
        {
          "currency_pair": {
            "Base": "XLM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "63"
        },
        {
          "currency_pair": {
            "Base": "ADA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "64"
        },
        {
          "currency_pair": {
            "Base": "RUNE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "65"
        }
      ],
      "next_id": "66"
    },
    "packetfowardmiddleware": {
      "params": {
        "fee_percentage": "0.000000000000000000"
      },
      "in_flight_packets": {}
    },
    "permissionedchannelrelayer": {
      "permissioned_relayers": []
    },
    "reward": {
      "params": {
        "reward_denom": "uinit",
        "dilution_period": "31536000s",
        "release_rate": "0.070000000000000000",
        "dilution_rate": "0.500000000000000000",
        "release_enabled": false
      },
      "last_release_timestamp": "2024-05-10T07:21:04.872317673Z",
      "last_dilution_timestamp": "2024-05-10T07:21:04.872317888Z"
    },
    "slashing": {
      "params": {
        "signed_blocks_window": "10000",
        "min_signed_per_window": "0.300000000000000000",
        "downtime_jail_duration": "600s",
        "slash_fraction_double_sign": "0.050000000000000000",
        "slash_fraction_downtime": "0.010000000000000000"
      },
      "signing_infos": [],
      "missed_blocks": []
    },
    "transfer": {
      "port_id": "transfer",
      "denom_traces": [],
      "params": {
        "send_enabled": true,
        "receive_enabled": true
      },
      "total_escrowed": []
    },
    "upgrade": {}
  }
}
